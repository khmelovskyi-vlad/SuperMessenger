@*@using Microsoft.AspNetCore.Identity;*@
@using SuperMessenger.Models.EntityFramework;
@model IEnumerable<RoleModel>
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@*<h1 class="bg-info text-white">All Roles</h1>
    @if ((await AuthorizationService.AuthorizeAsync(User, "ManageAllRoles")).Succeeded)
    {
        <a asp-action="Create" class="btn btn-secondary m-1">Create a Role</a>
        <a asp-action="CreateClaim" class="btn btn-secondary m-1">Create a Claim</a>
    }
    <table class="table table-sm table-bordered table-bordered">
        @if ((await AuthorizationService.AuthorizeAsync(User, "ManageAllRoles")).Succeeded)
        {
            <tr><th>ID</th><th>Name</th><th>Users</th><th>Update</th><th>Delete</th></tr>
            @foreach (var role in Model)
            {
                <tr>
                    <td>@role.Id</td>
                    <td>@role.Name</td>
                    <td i-role="@role.Id"></td>
                    <td><a class="btn btn-sm btn-primary" asp-action="Update" asp-route-id="@role.Id">Update</a></td>
                    <td>
                        <form asp-action="Delete" asp-route-id="@role.Id" method="post">
                            <button type="submit" class="btn btn-sm btn-danger">
                                Delete
                            </button>
                        </form>
                    </td>
                </tr>
            }
        }
        else if ((await AuthorizationService.AuthorizeAsync(User, "ManageManagers")).Succeeded)
        {
            <tr><th>Name</th><th>Users</th><th>Update</th></tr>
            @foreach (var role in Model)
            {
                if (role.Name == "Manager" || role.Name == "User")
                {
                    <tr>
                        <td>@role.Name</td>
                        <td i-role="@role.Id"></td>
                        <td><a class="btn btn-sm btn-primary" asp-action="Update" asp-route-id="@role.Id">Update</a></td>
                    </tr>
                }
            }
        }
        else if ((await AuthorizationService.AuthorizeAsync(User, "ManageUsers")).Succeeded)
        {
            <tr><th>Name</th><th>Users</th><th>Update</th></tr>
            @foreach (var role in Model)
            {
                if (role.Name == "User")
                {
                    <tr>
                        <td>@role.Name</td>
                        <td i-role="@role.Id"></td>
                        <td><a class="btn btn-sm btn-primary" asp-action="Update" asp-route-id="@role.Id">Update</a></td>
                    </tr>
                }
            }
        }
    </table>*@
<h1 class="bg-info text-white">All Roles</h1>
<a asp-action="Create" class="btn btn-secondary m-1">Create a Role</a>
<a asp-action="CreateClaim" class="btn btn-secondary m-1">Create a Claim</a>
<table class="table table-sm table-bordered table-bordered">
    <tr><th>ID</th><th>Name</th><th>Users</th><th>Update</th><th>Delete</th><th>Ban users</th><th>Ban ips</th></tr>
    @foreach (var role in Model)
    {
        <tr>
            <td>@role.Id</td>
            <td>@role.Name</td>
            <td>@role.UserNames</td>
            @*<td i-role="@role.Name"></td>*@
            <td><a class="btn btn-sm btn-primary" asp-action="Update" asp-route-id="@role.Id">Update</a></td>
            <td>
                <form asp-action="Delete" asp-route-id="@role.Id" method="post">
                    <button type="submit" class="btn btn-sm btn-danger">
                        Delete
                    </button>
                </form>
            </td>
            <td><a class="btn btn-sm btn-warning" asp-action="BanUser">BanUsers</a></td>
            <td><a class="btn btn-sm btn-warning" asp-action="BanUser">BanIps</a></td>
        </tr>
    }
</table>