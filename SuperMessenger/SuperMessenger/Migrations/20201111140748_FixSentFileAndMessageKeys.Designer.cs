// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperMessenger.Data;

namespace SuperMessenger.Migrations
{
    [DbContext(typeof(SuperMessengerDbContext))]
    [Migration("20201111140748_FixSentFileAndMessageKeys")]
    partial class FixSentFileAndMessageKeys
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Application", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsInBan")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0b4b3669-6089-4e8d-95dc-5226eab52a65"),
                            Value = "ywlcmyqgjcudso"
                        },
                        new
                        {
                            Id = new Guid("cf7e0609-6d45-4695-8a48-a96bbfc3542a"),
                            Value = "fqhmfspsjbtugvj"
                        },
                        new
                        {
                            Id = new Guid("e8e44d3c-9cef-4c60-a517-e353c7f3e50d"),
                            Value = "euiwdziscbcywrvpenvk"
                        },
                        new
                        {
                            Id = new Guid("0208f61a-b0cf-4c33-aa19-09846996f277"),
                            Value = "ilephlrrfbzt"
                        },
                        new
                        {
                            Id = new Guid("9c4ed64b-fb12-460d-9a4b-0358f6346ede"),
                            Value = "zwkawpvtjrpcahnu"
                        },
                        new
                        {
                            Id = new Guid("06912748-5e51-49cb-8dc1-5de5785c63ef"),
                            Value = "qvvikumsozznau"
                        },
                        new
                        {
                            Id = new Guid("d9865a2e-695c-4b76-8e5b-5cc26960d7f6"),
                            Value = "kzenjrtrufzwcdgc"
                        },
                        new
                        {
                            Id = new Guid("0ddd6f27-57a6-4b8f-b63f-3b2d65370fd8"),
                            Value = "slqgkctigdnkdw"
                        },
                        new
                        {
                            Id = new Guid("f240116c-b58a-452a-a645-9d7cab78cbaf"),
                            Value = "sldenhlunbvmnzyif"
                        },
                        new
                        {
                            Id = new Guid("b53f25d4-f8a1-4cb4-b7d5-16219a21a505"),
                            Value = "ntfpbpctyftl"
                        },
                        new
                        {
                            Id = new Guid("3a38e0cb-16e5-47a5-aa8a-608cefd5d56e"),
                            Value = "ahvtydurfdpzaq"
                        },
                        new
                        {
                            Id = new Guid("9e7bfdcb-e337-419f-9310-fc9028353893"),
                            Value = "yfdoxzzjxytudddl"
                        },
                        new
                        {
                            Id = new Guid("7ab9388f-0c76-408b-97e5-6a6d0ed0b2ce"),
                            Value = "txcryfbsofmkxh"
                        },
                        new
                        {
                            Id = new Guid("cfbb2194-eee5-4b5f-9fee-ff7b448aeffe"),
                            Value = "etcesokgegatoej"
                        },
                        new
                        {
                            Id = new Guid("35a367f2-e025-4019-aaec-3df993794829"),
                            Value = "ifgljdiltzl"
                        },
                        new
                        {
                            Id = new Guid("7d156ba7-2217-4129-837d-5c80a95887dd"),
                            Value = "wieccgqbdexsp"
                        },
                        new
                        {
                            Id = new Guid("770339ba-d2c1-4045-863d-9db5eaf17256"),
                            Value = "kjcadycxelxezdzxar"
                        },
                        new
                        {
                            Id = new Guid("935b15ea-2939-4de8-a790-a9a9de6476ec"),
                            Value = "kxvcmqwjisnvhf"
                        },
                        new
                        {
                            Id = new Guid("9b4c400b-b70b-42da-b75f-b89c53d27585"),
                            Value = "gphxetqfsjsizcsmc"
                        },
                        new
                        {
                            Id = new Guid("11557529-3e19-415f-84f6-6076a54ad779"),
                            Value = "phuqgeurgmoqcowzm"
                        },
                        new
                        {
                            Id = new Guid("83a79319-2ddd-4688-a572-b21f3b90b4d9"),
                            Value = "lnbnzissxvlpduqemf"
                        },
                        new
                        {
                            Id = new Guid("01c9d714-960a-4750-aecd-d2b2c994f0d2"),
                            Value = "ggbxitjjpabdfzysor"
                        },
                        new
                        {
                            Id = new Guid("7d8c655c-5a02-422f-949e-ffb651385004"),
                            Value = "rusbexsvityqgm"
                        },
                        new
                        {
                            Id = new Guid("00ca87e1-fa2a-47e9-8b67-5d32f78b09cb"),
                            Value = "pkctesgevzrvxxdx"
                        },
                        new
                        {
                            Id = new Guid("49e152c7-7ae8-46c4-8e4a-fa42e31e6325"),
                            Value = "dkryyigsopgi"
                        },
                        new
                        {
                            Id = new Guid("de5419f8-e3da-430d-a9b4-ce35c9019106"),
                            Value = "fbdmcnppvcvyizux"
                        },
                        new
                        {
                            Id = new Guid("191c83e7-dc92-49e4-a29b-aa274051281a"),
                            Value = "zfbkrorilloowpek"
                        },
                        new
                        {
                            Id = new Guid("73075cc9-917d-40d9-8b72-17838426d1fc"),
                            Value = "lrdyrozogizis"
                        },
                        new
                        {
                            Id = new Guid("fcc28f7a-afb7-4575-b7f6-d44f791f5722"),
                            Value = "frsyjqqpnca"
                        },
                        new
                        {
                            Id = new Guid("915baf75-0682-4685-bccd-b6792751242b"),
                            Value = "xchhrjzdakbazxxdftqrbz"
                        },
                        new
                        {
                            Id = new Guid("62d00ddd-690c-43c3-9b0e-b8a44bb785cc"),
                            Value = "twdwvhkxmazlijv"
                        },
                        new
                        {
                            Id = new Guid("4b8a5e55-95f6-4b7c-8fd4-926acbbea407"),
                            Value = "qlukotnnwvzgf"
                        },
                        new
                        {
                            Id = new Guid("2eb77a22-5b66-4980-a063-b0c3788ae0a0"),
                            Value = "bruwloscsdvyp"
                        },
                        new
                        {
                            Id = new Guid("7b798cff-98d6-43a9-8e10-b8cd380f0669"),
                            Value = "fpzmvtsuirnma"
                        },
                        new
                        {
                            Id = new Guid("e22201ac-e75f-4509-b0ca-1b36c10586ab"),
                            Value = "tzydzsmspgg"
                        },
                        new
                        {
                            Id = new Guid("c4ac8934-143b-4dfd-9c0c-e002195796ff"),
                            Value = "qxafejerfaftxqos"
                        },
                        new
                        {
                            Id = new Guid("71af3237-a3a5-4499-9d35-44803bb179a8"),
                            Value = "lawiurnlevgasfik"
                        },
                        new
                        {
                            Id = new Guid("f918dcfc-89fd-45e3-b82e-a3f6d90ae58a"),
                            Value = "zmulabdhzsuxpwqh"
                        },
                        new
                        {
                            Id = new Guid("c290b8ba-6f5a-42d6-810e-b3cb145bd2e6"),
                            Value = "svftndiqndind"
                        },
                        new
                        {
                            Id = new Guid("69776bc5-2053-40f6-983f-8d3ad6b41b7e"),
                            Value = "lcdowfzmgjsa"
                        },
                        new
                        {
                            Id = new Guid("ebbc89ba-12e6-4236-9e50-f7d217ea891e"),
                            Value = "dfzvxxrafmotgaveyzj"
                        },
                        new
                        {
                            Id = new Guid("1336e0e1-f456-473a-8d1d-29978bed1bf8"),
                            Value = "kprwtmmwyjs"
                        },
                        new
                        {
                            Id = new Guid("4a4d3bca-299d-4b5f-a242-140af28c2fd6"),
                            Value = "hcmakxwdhskhx"
                        },
                        new
                        {
                            Id = new Guid("9618745b-ff03-46c6-ac50-9344300e9a1a"),
                            Value = "azdjycixompo"
                        },
                        new
                        {
                            Id = new Guid("7f2e6016-b116-4651-b9e0-8e9c56a6bb0e"),
                            Value = "aqvolnpsqmznidd"
                        },
                        new
                        {
                            Id = new Guid("7ef2bdc0-1d07-48ad-919b-86c2e05d225a"),
                            Value = "iwokebtqvmp"
                        },
                        new
                        {
                            Id = new Guid("86e3cef9-3052-4aa7-955f-60dc90e5962c"),
                            Value = "nhpggunqudpmduqgg"
                        },
                        new
                        {
                            Id = new Guid("6620bc8f-3460-46ec-bfc8-820f33d90f70"),
                            Value = "nozlsegrstpn"
                        },
                        new
                        {
                            Id = new Guid("ebb2566c-5369-4b35-b377-540dd7988e7d"),
                            Value = "inyyjwlkcvpczdsjoqy"
                        },
                        new
                        {
                            Id = new Guid("477b7286-4e50-45b8-b461-ccc659bc98ff"),
                            Value = "uqcliejbuok"
                        },
                        new
                        {
                            Id = new Guid("a5f5d240-f959-4c19-a7bf-7d8157868296"),
                            Value = "usrmfasregdg"
                        },
                        new
                        {
                            Id = new Guid("bcd9bcb9-0243-419c-975d-0c886e0234b5"),
                            Value = "nwkjvfsvzpqh"
                        },
                        new
                        {
                            Id = new Guid("0534a77f-d2a7-40ab-970a-f2eb146d5898"),
                            Value = "jdhjzuhhhdquz"
                        },
                        new
                        {
                            Id = new Guid("3f50e506-e226-4cec-85b0-e4352ed339ec"),
                            Value = "rlkinnprpedsm"
                        },
                        new
                        {
                            Id = new Guid("ed61b58b-3ad9-4804-8b69-869ebf9e793d"),
                            Value = "egfrzzxujjpslmk"
                        },
                        new
                        {
                            Id = new Guid("ed9a1c29-beec-43dc-a630-91f2389c5639"),
                            Value = "sbcokefqtnoq"
                        },
                        new
                        {
                            Id = new Guid("71fddf0b-cf1b-444a-8d02-1dcdea5a4f4f"),
                            Value = "fgrhkeunlphqocspzw"
                        },
                        new
                        {
                            Id = new Guid("9ed681f0-5c6f-461d-bbc6-eabccf99cb26"),
                            Value = "xrshkqnerslzlvpwho"
                        },
                        new
                        {
                            Id = new Guid("c2a773aa-1024-43cf-9e6a-c2df1e7f483b"),
                            Value = "osjuvlnatankon"
                        },
                        new
                        {
                            Id = new Guid("97737fde-7a6d-489f-91bc-22ab5c2bc27b"),
                            Value = "socidsschosqnd"
                        },
                        new
                        {
                            Id = new Guid("00a4f9dd-b5da-4818-99dc-04b9b09be168"),
                            Value = "tqsenffuovotf"
                        },
                        new
                        {
                            Id = new Guid("09f55dae-8b31-4ab0-9d30-ef4a67565777"),
                            Value = "jkzeommmrewgqw"
                        },
                        new
                        {
                            Id = new Guid("8cb80bcf-f17c-4567-811c-7c0ecc619586"),
                            Value = "tmxxtnhgvjmr"
                        },
                        new
                        {
                            Id = new Guid("2f284c26-7e57-4544-b961-6e71e021861e"),
                            Value = "itbhxkidqbmr"
                        },
                        new
                        {
                            Id = new Guid("bdb6443e-af20-4116-b8dd-d62128f8fac4"),
                            Value = "unzzchsoajatoej"
                        },
                        new
                        {
                            Id = new Guid("a7269b32-0148-4684-808a-282f89bfe4f8"),
                            Value = "wnsxepzkgmfeihdk"
                        },
                        new
                        {
                            Id = new Guid("6a7dfaf7-9b01-4b67-ba07-920d44a1387d"),
                            Value = "xkllmkgjxcqorlir"
                        },
                        new
                        {
                            Id = new Guid("0c238155-1e0c-4089-9e21-c7df142f2f5d"),
                            Value = "hltqiclmkoekwmzrkzy"
                        },
                        new
                        {
                            Id = new Guid("1931ba50-2e23-4123-8655-3b983c73a91d"),
                            Value = "cwsuwooryoff"
                        },
                        new
                        {
                            Id = new Guid("5c4a980d-8a25-4a0d-b706-90cdcc7435f2"),
                            Value = "bkczcwzkilwjo"
                        },
                        new
                        {
                            Id = new Guid("63547038-fb1d-4fbb-bbc3-5a206ef0bdba"),
                            Value = "jxfvwqetqbzasqx"
                        },
                        new
                        {
                            Id = new Guid("9412d272-f19d-4a4f-a68f-5496c3fcbeb1"),
                            Value = "aucsmaswvrxb"
                        },
                        new
                        {
                            Id = new Guid("8e2d39b8-03da-4db7-82fa-0ddda297b5a5"),
                            Value = "caftrryhdupgnn"
                        },
                        new
                        {
                            Id = new Guid("9b7a0b20-0152-45a8-ba30-86f6115ccdf5"),
                            Value = "uakegzxawnuxaueln"
                        },
                        new
                        {
                            Id = new Guid("ea26252e-a47b-4591-9c3e-1f30a200bd7f"),
                            Value = "cppfishrxwautkiht"
                        },
                        new
                        {
                            Id = new Guid("132821a7-42dc-4e1f-90f7-fd7ebcb5034a"),
                            Value = "oigwkzogsmnwisnyd"
                        },
                        new
                        {
                            Id = new Guid("ae91b025-b388-4926-ade7-e0790779193d"),
                            Value = "kbcaktahchsnnh"
                        },
                        new
                        {
                            Id = new Guid("52f4a6f0-6766-4bde-acda-77081ab5139f"),
                            Value = "kjkxbrnawnzqwa"
                        },
                        new
                        {
                            Id = new Guid("b2f4417e-8118-4000-9a0a-25a2d1f1cdfe"),
                            Value = "bxmspfyxxxbfwpmbv"
                        },
                        new
                        {
                            Id = new Guid("5bf63e95-da9d-408d-8d5e-6357d4b13bf8"),
                            Value = "domebvugeok"
                        },
                        new
                        {
                            Id = new Guid("26931c68-921d-40ed-bb1e-cfc06d615895"),
                            Value = "ckxoobvffkm"
                        },
                        new
                        {
                            Id = new Guid("549d895d-c36e-4974-841b-4a1139151119"),
                            Value = "vfwgprkbayhyqqn"
                        },
                        new
                        {
                            Id = new Guid("6fb10313-dd31-4da8-b3c7-3fe67e8e8c07"),
                            Value = "qtnvpyqwkqqscux"
                        },
                        new
                        {
                            Id = new Guid("27078bb0-5d25-49e4-bbbc-e88caad0bb41"),
                            Value = "hgklovzggefrdesblrj"
                        },
                        new
                        {
                            Id = new Guid("bf9a4e6d-58c3-4457-813a-5b323de7b357"),
                            Value = "dqeegnaxkbbxs"
                        },
                        new
                        {
                            Id = new Guid("cb3adb03-ea80-44e4-970e-95ef3fbe4d95"),
                            Value = "xrxhhvjqsi"
                        },
                        new
                        {
                            Id = new Guid("f396b82e-51d5-4c8d-9d39-42070b0b5839"),
                            Value = "ogikbjtdllsdjyo"
                        },
                        new
                        {
                            Id = new Guid("69444db1-c923-42cc-b190-c2cbcde5a744"),
                            Value = "jbxivjsnsjphysrz"
                        },
                        new
                        {
                            Id = new Guid("4508d81b-6104-4e60-869c-77f9be154825"),
                            Value = "fxxeawkbbyy"
                        },
                        new
                        {
                            Id = new Guid("27e25b07-6ead-481a-a9e7-20fcb941642f"),
                            Value = "vkryxkmxgdhydvc"
                        },
                        new
                        {
                            Id = new Guid("32845359-b2bb-44e5-a7bb-8b6869bdb40b"),
                            Value = "wozxldcxgkaklw"
                        },
                        new
                        {
                            Id = new Guid("8796e25c-df23-4acb-b3e8-69be07865ab5"),
                            Value = "wkjioitnloclibjesps"
                        },
                        new
                        {
                            Id = new Guid("aa2ddd1b-d927-49c0-b2f0-976dc0956b57"),
                            Value = "mqgicayyhsmnxth"
                        },
                        new
                        {
                            Id = new Guid("f4341425-3087-4111-9b35-af2627467f82"),
                            Value = "lerwpqwrhnwnb"
                        },
                        new
                        {
                            Id = new Guid("7173a404-7c89-43f0-91aa-7b8f8ca7169a"),
                            Value = "uizepgmsomenxumy"
                        },
                        new
                        {
                            Id = new Guid("1697da2d-854b-4a1e-83e0-004d10aab9a7"),
                            Value = "kthzulmxwijowe"
                        },
                        new
                        {
                            Id = new Guid("cd2475b2-e934-4d56-9254-06c6fb9662a8"),
                            Value = "cvqhwgyemtsxlnunus"
                        },
                        new
                        {
                            Id = new Guid("592617d6-c46c-406a-b7ad-2bfc3705dc4d"),
                            Value = "tzfsbnwjhmgjt"
                        },
                        new
                        {
                            Id = new Guid("b2e7328b-affa-40ea-971e-16f9dba6d680"),
                            Value = "ttrmogqmvdazylykby"
                        },
                        new
                        {
                            Id = new Guid("0ab2a86f-16f6-4195-a3b2-dafd197aca69"),
                            Value = "znrsarjofqhlcckb"
                        });
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Invitation", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InvitedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InviterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId", "InvitedUserId", "InviterId");

                    b.HasIndex("InvitedUserId");

                    b.HasIndex("InviterId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Ip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsInBan")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ips");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.SentFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("SentFiles");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserCountry", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "CountryId");

                    b.HasIndex("CountryId");

                    b.ToTable("UserCountries");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserGroup", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCreator")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLeaved")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserIp", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IpId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "IpId");

                    b.HasIndex("IpId");

                    b.ToTable("UserIps");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Application", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Applications")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Invitation", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Invitations")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "InvitedUser")
                        .WithMany("InvitationsForMe")
                        .HasForeignKey("InvitedUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "Inviter")
                        .WithMany("InvitationsFromMe")
                        .HasForeignKey("InviterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Message", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Messages")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.SentFile", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("SentFiles")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("SentFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserCountry", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Country", "Country")
                        .WithMany("UserCountries")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserCountries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserGroup", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserIp", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Ip", "Ip")
                        .WithMany("UserIps")
                        .HasForeignKey("IpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserIps")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
