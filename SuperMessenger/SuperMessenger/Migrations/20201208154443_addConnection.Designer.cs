// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperMessenger.Data;

namespace SuperMessenger.Migrations
{
    [DbContext(typeof(SuperMessengerDbContext))]
    [Migration("20201208154443_addConnection")]
    partial class addConnection
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Application", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsInBan")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Connection", b =>
                {
                    b.Property<string>("ConnectionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsConnected")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ConnectionId");

                    b.HasIndex("UserId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f753b3f7-0cc9-4c25-8ed0-636269ef6432"),
                            Value = "dmjwdvrpvhccjdrf"
                        },
                        new
                        {
                            Id = new Guid("359a0ba6-5515-40f9-904a-703985985f30"),
                            Value = "azwcljookqizsrkiq"
                        },
                        new
                        {
                            Id = new Guid("e418c19d-c7f4-4bb3-9d77-ea349fb72746"),
                            Value = "mhiovvypsjhm"
                        },
                        new
                        {
                            Id = new Guid("87b99219-3b2a-4016-ae18-5cfce7bd1598"),
                            Value = "zvaibgcpctzenzmj"
                        },
                        new
                        {
                            Id = new Guid("92a13efb-3995-46f4-af75-401388f190ce"),
                            Value = "wvzzqmegdachb"
                        },
                        new
                        {
                            Id = new Guid("7d1160a9-ea09-4775-8a80-632a94891b10"),
                            Value = "ursvzbhkvkzmfj"
                        },
                        new
                        {
                            Id = new Guid("f86b63c1-fc7d-4216-8906-9eb8f53025e4"),
                            Value = "brllefkzcztoucijry"
                        },
                        new
                        {
                            Id = new Guid("a85a75e8-9a78-4ea3-9250-a1c6a3b134c2"),
                            Value = "gplxalhqnp"
                        },
                        new
                        {
                            Id = new Guid("677aae99-a861-4a97-950d-b679ee0565db"),
                            Value = "ccpjrirwsulvb"
                        },
                        new
                        {
                            Id = new Guid("848654ab-edee-4d90-a987-64e98aed3030"),
                            Value = "tdiivbytpsgarki"
                        },
                        new
                        {
                            Id = new Guid("78f871a0-8ec1-4298-9b4b-e0b2fd0379f4"),
                            Value = "whcmqsvmcknk"
                        },
                        new
                        {
                            Id = new Guid("e2bf382d-7bdc-436a-aa4f-a4c819b91bb4"),
                            Value = "jvtvchxvdgtfyyzn"
                        },
                        new
                        {
                            Id = new Guid("8cd676f3-9f3e-4add-bec6-d10836b83759"),
                            Value = "qglrklfbdhod"
                        },
                        new
                        {
                            Id = new Guid("fe0b81a8-329a-490b-825a-9b7bb6806b3d"),
                            Value = "psrrmxkfsmydim"
                        },
                        new
                        {
                            Id = new Guid("ca4bac62-55e9-4ebe-b8b4-476a1d89d738"),
                            Value = "ppakzncxatowjwvvl"
                        },
                        new
                        {
                            Id = new Guid("0d017f7e-04e8-4c23-b8a8-c8a07c161223"),
                            Value = "wkvpqzbuddsyib"
                        },
                        new
                        {
                            Id = new Guid("ab82a02a-59ab-4525-b19b-f8a8b72b7228"),
                            Value = "xiuuihdrxdfzq"
                        },
                        new
                        {
                            Id = new Guid("4bc676e3-b3e5-4bcd-9848-d1eb5c1ba498"),
                            Value = "kctheuetwmhleb"
                        },
                        new
                        {
                            Id = new Guid("426e66e3-4f56-4063-a95c-3acd7fe893a3"),
                            Value = "vkszbmorocwm"
                        },
                        new
                        {
                            Id = new Guid("566a764b-3929-4a88-a14b-4a3a58a74c2c"),
                            Value = "aerkmrpophstiyssg"
                        },
                        new
                        {
                            Id = new Guid("d342ebfb-c211-4623-861b-7ef1cee0c006"),
                            Value = "hostdrmtidhkbkde"
                        },
                        new
                        {
                            Id = new Guid("491028ed-282f-4c61-a459-066abee3ac0b"),
                            Value = "uxkxrtqlbidwgvimm"
                        },
                        new
                        {
                            Id = new Guid("755eadb4-4b47-4910-bac2-a51f067ae938"),
                            Value = "hhpwurklhckmcfs"
                        },
                        new
                        {
                            Id = new Guid("0ecf8216-f1da-40b5-8aef-8047adfdcad6"),
                            Value = "etcmwtuxswzywow"
                        },
                        new
                        {
                            Id = new Guid("5079bbec-26ca-430b-8e30-a22f2bab133b"),
                            Value = "ytdvideieiuytlt"
                        },
                        new
                        {
                            Id = new Guid("c35ccf20-4282-4d4c-86c4-3506be05c2fb"),
                            Value = "wbjcunleqqpmbuv"
                        },
                        new
                        {
                            Id = new Guid("93c4f5d0-b7be-433d-9bcf-7d76b773f3fb"),
                            Value = "pbkvrlqicotv"
                        },
                        new
                        {
                            Id = new Guid("4fd76960-0f76-4d55-84d2-48d985d465ad"),
                            Value = "itgyjlorohzdge"
                        },
                        new
                        {
                            Id = new Guid("f238cf6d-0cf0-4944-9192-f12fb23f5c36"),
                            Value = "tgylitzidtacymzn"
                        },
                        new
                        {
                            Id = new Guid("8ece20af-5009-4277-b8a1-ad40f09ff806"),
                            Value = "fmktsprqxfjospx"
                        },
                        new
                        {
                            Id = new Guid("5649b05e-5bd2-48a1-bf17-c7bbb2738b15"),
                            Value = "wuprxryzjtgsw"
                        },
                        new
                        {
                            Id = new Guid("b3a59e19-2f51-4cc2-9bdc-52713f7c06ba"),
                            Value = "laihzgyjkbwst"
                        },
                        new
                        {
                            Id = new Guid("3f79e252-e6df-4173-8ae4-d53dd29a2cbf"),
                            Value = "swxtiwsvjvwbrmsufo"
                        },
                        new
                        {
                            Id = new Guid("ca0f1670-5f2f-474f-8aa2-8cd621f57efb"),
                            Value = "mmzjkxubivod"
                        },
                        new
                        {
                            Id = new Guid("c2ce0e74-3283-4e1d-9cc9-cc40573a8418"),
                            Value = "ncccwuqvulfimjrs"
                        },
                        new
                        {
                            Id = new Guid("0e072fc5-9942-42a9-8509-e800f45931ad"),
                            Value = "rkbdjmphummpkgki"
                        },
                        new
                        {
                            Id = new Guid("27cf36c2-52e4-4b61-a117-4f7cbf7ebd83"),
                            Value = "xklatblesunjcc"
                        },
                        new
                        {
                            Id = new Guid("f3d71aef-1166-4dd6-9833-984c688d94f8"),
                            Value = "lorspbjlmbtdx"
                        },
                        new
                        {
                            Id = new Guid("eeb60f28-88b2-4906-9a0f-1da50043019c"),
                            Value = "pipzlmfemtgjx"
                        },
                        new
                        {
                            Id = new Guid("36835f0d-cdc9-4b5b-9a76-9adefb921d77"),
                            Value = "ogltjunkbeqpv"
                        },
                        new
                        {
                            Id = new Guid("b62070f5-8842-4ff5-9ece-dc26c2ab2330"),
                            Value = "serapleivguypey"
                        },
                        new
                        {
                            Id = new Guid("7d23a782-f7cf-44dd-bc46-0613fff5b91e"),
                            Value = "fslnwyuyjuyw"
                        },
                        new
                        {
                            Id = new Guid("b6a3a2ac-ffc2-49ce-8aae-c7c4786b9b4a"),
                            Value = "tekmptkpouaqta"
                        },
                        new
                        {
                            Id = new Guid("3c6fafdf-49d8-4e65-a30e-abc648503317"),
                            Value = "rkfigukkoklf"
                        },
                        new
                        {
                            Id = new Guid("c072b231-d89d-4861-8641-ead462a09fb6"),
                            Value = "wfdraqweyx"
                        },
                        new
                        {
                            Id = new Guid("6a190a21-cb2d-4556-b2f0-07768dd379ab"),
                            Value = "pgfpykhcvweiwt"
                        },
                        new
                        {
                            Id = new Guid("e5660633-6676-4bff-bdba-0656162bad6c"),
                            Value = "nizsctipawdf"
                        },
                        new
                        {
                            Id = new Guid("2e776ace-a456-444e-a9b3-75b671cca0e4"),
                            Value = "epocaffcdfzincckh"
                        },
                        new
                        {
                            Id = new Guid("3e9bb78d-3b49-4914-9422-f7c3a98fc97c"),
                            Value = "anjspdhtjxixree"
                        },
                        new
                        {
                            Id = new Guid("c0ae5000-2117-4ddc-b80c-25ea4b366d97"),
                            Value = "ungelmhbdw"
                        },
                        new
                        {
                            Id = new Guid("3e35f3f4-758b-497e-a5fa-b10148791ad9"),
                            Value = "klfwmebusjeqeop"
                        },
                        new
                        {
                            Id = new Guid("2d358f9c-73f8-4793-b0b4-9b9f05fd3235"),
                            Value = "imuybwweabxuzpq"
                        },
                        new
                        {
                            Id = new Guid("304cb0af-44b7-4ccd-a7ef-83dbc14219dc"),
                            Value = "jomzslxlnijqvvfaa"
                        },
                        new
                        {
                            Id = new Guid("453cc42d-11ca-46f3-9a54-01c6731665a0"),
                            Value = "nmsirdjuynwo"
                        },
                        new
                        {
                            Id = new Guid("7dc08585-1f2a-42a2-97c1-7d9a84c96def"),
                            Value = "tttivmhldnixj"
                        },
                        new
                        {
                            Id = new Guid("6d9d60a8-8efd-4cc6-a82f-7b10b0c1dfc2"),
                            Value = "nqumndlcpbr"
                        },
                        new
                        {
                            Id = new Guid("192fdf94-91f3-4964-a6b9-67aff4709ef5"),
                            Value = "saxrxxqenrm"
                        },
                        new
                        {
                            Id = new Guid("f8cc379e-582c-4f08-ab48-564f1a3da0da"),
                            Value = "bfhhlixerfgaipwdry"
                        },
                        new
                        {
                            Id = new Guid("188045a0-6710-44d2-83cc-14c8bb17fa98"),
                            Value = "iggjhyebumtwtlz"
                        },
                        new
                        {
                            Id = new Guid("f2169420-aec5-4997-9cce-f10d61e72d93"),
                            Value = "vymqdfdezbzpssrc"
                        },
                        new
                        {
                            Id = new Guid("0b491acc-f22a-479d-90d8-ffdffaf6e5e0"),
                            Value = "eqriuepxxfjj"
                        },
                        new
                        {
                            Id = new Guid("116f60e6-af1b-4ee0-9778-9c66bbfea930"),
                            Value = "qgioamlnscjtgnjan"
                        },
                        new
                        {
                            Id = new Guid("b33d1092-ba86-48a4-8647-e42dc005a49c"),
                            Value = "oiequbefxrnlnsjs"
                        },
                        new
                        {
                            Id = new Guid("f3153042-854d-4e9a-a71b-b373e83fa6f7"),
                            Value = "gqtvnkifanohtnb"
                        },
                        new
                        {
                            Id = new Guid("d9f796cd-4031-4455-b38c-3ffdb43fd6fc"),
                            Value = "sgsgjxijikvfszuxh"
                        },
                        new
                        {
                            Id = new Guid("cde288c5-926b-417c-bfc7-4cf75d509886"),
                            Value = "ekoyynpulx"
                        },
                        new
                        {
                            Id = new Guid("30b06c67-df1e-4055-a1ca-0cfdf802c82a"),
                            Value = "vfqjzsjbzoaatg"
                        },
                        new
                        {
                            Id = new Guid("7f8580f9-e3b1-4083-bf8e-304b121e5fbd"),
                            Value = "mjeondfmuehtcoz"
                        },
                        new
                        {
                            Id = new Guid("961156dd-d2eb-4025-a4d5-c81b5b933fd7"),
                            Value = "ktdcvsyigkc"
                        },
                        new
                        {
                            Id = new Guid("548120d3-5bf1-4932-bc28-e0ea7ffbf156"),
                            Value = "xhzufrfmlceyzqah"
                        },
                        new
                        {
                            Id = new Guid("5bb5d58d-9833-4c94-963d-0fc106e552aa"),
                            Value = "amjlngqkfh"
                        },
                        new
                        {
                            Id = new Guid("06f40fac-49a3-49fd-b434-98045ed20204"),
                            Value = "dbabzykpmphdnq"
                        },
                        new
                        {
                            Id = new Guid("b460f919-2323-4fd3-9ff4-c433f16cc55f"),
                            Value = "uapnjwovuzuyjm"
                        },
                        new
                        {
                            Id = new Guid("36301f91-2a3a-4e79-b7bd-6a9eaf44f4b3"),
                            Value = "ypybjgpsgclclbiei"
                        },
                        new
                        {
                            Id = new Guid("df3cee5e-a0dc-4664-9712-dbacd8c96f4c"),
                            Value = "qokjktqysxfzf"
                        },
                        new
                        {
                            Id = new Guid("ada082c3-b8b9-4b8a-ba2d-2b9e8462a427"),
                            Value = "prtrmcoixomqcd"
                        },
                        new
                        {
                            Id = new Guid("9edd1ddc-0f20-4412-b070-d5a24a3c17bf"),
                            Value = "gkjvyqclqwx"
                        },
                        new
                        {
                            Id = new Guid("698127bb-25a3-42c4-8f6e-06f4a03b92b9"),
                            Value = "ryyslbmliysmx"
                        },
                        new
                        {
                            Id = new Guid("33c56248-0598-4d5a-8cdf-4415cb28d176"),
                            Value = "lgempnnqmgxdjc"
                        },
                        new
                        {
                            Id = new Guid("049a27e4-854e-4de2-b77d-106107630324"),
                            Value = "fikgebzupts"
                        },
                        new
                        {
                            Id = new Guid("85f56ccb-d296-4421-92f8-57d9f8007c49"),
                            Value = "ryyybzwdybezjtny"
                        },
                        new
                        {
                            Id = new Guid("9a1b8260-e9cc-407c-bd17-6990981cd511"),
                            Value = "hnalrnmpgrs"
                        },
                        new
                        {
                            Id = new Guid("6c61d500-0d0c-48f1-ab8e-1f32935861a2"),
                            Value = "gxzsneosbcfxk"
                        },
                        new
                        {
                            Id = new Guid("62b00638-ad05-4c95-8c62-945475f1b5d0"),
                            Value = "ggmdkragbjwwaou"
                        },
                        new
                        {
                            Id = new Guid("79de8199-b82e-4b87-9ce1-7c99e83563a1"),
                            Value = "fxcojiufomo"
                        },
                        new
                        {
                            Id = new Guid("9527794f-017f-4843-8f3c-48ffce09286b"),
                            Value = "lsjqndonsp"
                        },
                        new
                        {
                            Id = new Guid("c759c4a7-1b4f-45df-a7df-aeb5cc1df29c"),
                            Value = "ncvailvtpvnbxy"
                        },
                        new
                        {
                            Id = new Guid("60d7afbb-3309-4805-9904-64148fef069d"),
                            Value = "tyklkjpygrtig"
                        },
                        new
                        {
                            Id = new Guid("ee5f2018-913c-4646-b9f3-a9beb725dff2"),
                            Value = "eiomzfotpdpyxg"
                        },
                        new
                        {
                            Id = new Guid("09c3a51f-f283-487b-b76e-54acf04495cb"),
                            Value = "zteekqqfim"
                        },
                        new
                        {
                            Id = new Guid("d12f8872-2199-4b97-8b1c-9c6cb53abef8"),
                            Value = "tdcmgsyidacqwepeagp"
                        },
                        new
                        {
                            Id = new Guid("c2dfd887-1750-4d80-88ac-ee06daa1e835"),
                            Value = "fknqzpslnrdt"
                        },
                        new
                        {
                            Id = new Guid("1dd3bd6c-54c3-41d2-bd22-80f14b45be67"),
                            Value = "ckswiwbohw"
                        },
                        new
                        {
                            Id = new Guid("9ec9ec01-a3e8-4856-b749-a7df427e7237"),
                            Value = "lptyyynzmicqco"
                        },
                        new
                        {
                            Id = new Guid("920a3899-11ee-4ee6-bb1e-eaf6628f2a93"),
                            Value = "vwerhlimjsyzgbzhvcb"
                        },
                        new
                        {
                            Id = new Guid("b2194e00-0ee3-4016-b3aa-37a2b2ad72b9"),
                            Value = "tkgvarxoaivzlx"
                        },
                        new
                        {
                            Id = new Guid("7b9c27cf-9fd7-42db-883c-c8f4a85f38c3"),
                            Value = "hwfgprpncrk"
                        },
                        new
                        {
                            Id = new Guid("6f5cb34c-cc90-4e8b-8f8a-5c85c04bec76"),
                            Value = "tnitzbjrxqzipnj"
                        },
                        new
                        {
                            Id = new Guid("e58c80a4-d174-4bac-958d-490dbef077cd"),
                            Value = "htpuzdtinraq"
                        },
                        new
                        {
                            Id = new Guid("e5d5d56f-89b0-420d-8165-24d946772cd5"),
                            Value = "dobfxmsziozsiymnslf"
                        });
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Invitation", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InvitedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InviterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId", "InvitedUserId", "InviterId");

                    b.HasIndex("InvitedUserId");

                    b.HasIndex("InviterId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Ip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsInBan")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ips");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.SentFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MimeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("SentFiles");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserCountry", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "CountryId");

                    b.HasIndex("CountryId");

                    b.ToTable("UserCountries");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserGroup", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCreator")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLeaved")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserIp", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IpId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "IpId");

                    b.HasIndex("IpId");

                    b.ToTable("UserIps");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Application", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Applications")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Connection", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Connections")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Invitation", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Invitations")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "InvitedUser")
                        .WithMany("InvitationsForMe")
                        .HasForeignKey("InvitedUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "Inviter")
                        .WithMany("InvitationsFromMe")
                        .HasForeignKey("InviterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Message", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Messages")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.SentFile", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("SentFiles")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("SentFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserCountry", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Country", "Country")
                        .WithMany("UserCountries")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserCountries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserGroup", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserIp", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Ip", "Ip")
                        .WithMany("UserIps")
                        .HasForeignKey("IpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserIps")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
