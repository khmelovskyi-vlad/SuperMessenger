// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperMessenger.Data;

namespace SuperMessenger.Migrations
{
    [DbContext(typeof(SuperMessengerDbContext))]
    [Migration("20201212115025_AddFileInformation")]
    partial class AddFileInformation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Application", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsInBan")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Connection", b =>
                {
                    b.Property<string>("ConnectionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsConnected")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ConnectionId");

                    b.HasIndex("UserId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("19475753-71d9-42b3-b8f6-54b2d7241f98"),
                            Value = "ynafvxgehjki"
                        },
                        new
                        {
                            Id = new Guid("aa717206-c034-4530-9afd-7b670bfdacbd"),
                            Value = "xqvqabwpjkqlspxzmc"
                        },
                        new
                        {
                            Id = new Guid("61e964f0-bfac-4286-8c8d-d547b70d048d"),
                            Value = "qoipicfhrbjxffnc"
                        },
                        new
                        {
                            Id = new Guid("1cad8df2-edb8-4250-95a9-cbd14de1eb83"),
                            Value = "cscqdnruqm"
                        },
                        new
                        {
                            Id = new Guid("127f1891-2f83-41af-be5c-2f8d12047f52"),
                            Value = "fbbaphpjbatewtyscwqa"
                        },
                        new
                        {
                            Id = new Guid("c825fe1d-31f4-41fa-b59d-522c9e028bcd"),
                            Value = "yoopdgpzrnps"
                        },
                        new
                        {
                            Id = new Guid("e123c1f5-7943-4a03-8da0-9f1fbaa7b21e"),
                            Value = "wfynvselaifjtkg"
                        },
                        new
                        {
                            Id = new Guid("3f29c7f4-f6fa-4b2b-976e-698957902544"),
                            Value = "uoxseuggzzdrkizaux"
                        },
                        new
                        {
                            Id = new Guid("735a6ac4-ff44-47d1-8702-8ace50963b59"),
                            Value = "puqsrqllkkcc"
                        },
                        new
                        {
                            Id = new Guid("99086f78-8e5c-4cb8-b627-72420684cbf5"),
                            Value = "fszjxnhgbsmoczlitkasg"
                        },
                        new
                        {
                            Id = new Guid("14ff0bf3-4aa8-4c81-84be-42713ffc9e40"),
                            Value = "bbhuoiqdpwk"
                        },
                        new
                        {
                            Id = new Guid("246371bc-ce73-43ef-aaf6-f652c33b1fbc"),
                            Value = "mcyambrgilchgq"
                        },
                        new
                        {
                            Id = new Guid("3b71a6f9-a1db-4441-ab04-c4fccbda44c2"),
                            Value = "jcwlvzjfehtahai"
                        },
                        new
                        {
                            Id = new Guid("a2faaf1a-2564-473b-b076-8b2bcc42bd30"),
                            Value = "lugmmnufpelsvdxaunozsu"
                        },
                        new
                        {
                            Id = new Guid("c232ca65-267a-44c7-ae5a-5112fd5c88e5"),
                            Value = "bnfizbhluyrap"
                        },
                        new
                        {
                            Id = new Guid("594e6518-3825-4749-a36e-e82c822407ec"),
                            Value = "cjogopcrdkmwttj"
                        },
                        new
                        {
                            Id = new Guid("2dbdc2d0-5014-4960-b06a-3a0c296136ab"),
                            Value = "nqqwanefcwlwom"
                        },
                        new
                        {
                            Id = new Guid("78906e3c-fb10-4949-ba8c-9d380197496f"),
                            Value = "kkaqlgzgqtapj"
                        },
                        new
                        {
                            Id = new Guid("87e601d8-0fa4-4a92-a90e-c0ef13553781"),
                            Value = "erduincjxpukamu"
                        },
                        new
                        {
                            Id = new Guid("5e1cbcec-3d34-439c-adf3-d799f99efc71"),
                            Value = "atecktwnzzwqotkdf"
                        },
                        new
                        {
                            Id = new Guid("bf993169-7eb9-4303-9057-887be7db4505"),
                            Value = "gcxnisuaalgeh"
                        },
                        new
                        {
                            Id = new Guid("b386ddb5-7f62-477c-ae33-549f10ee7f30"),
                            Value = "saspimwonjlx"
                        },
                        new
                        {
                            Id = new Guid("7ac17b28-a7b5-457d-ab92-296c34444b6c"),
                            Value = "uhexrdcufprtzbbi"
                        },
                        new
                        {
                            Id = new Guid("dfd270cf-e14d-40c2-a0c1-c36c61e2829a"),
                            Value = "wqisfnzwtrpeon"
                        },
                        new
                        {
                            Id = new Guid("16fbb8ec-e9e4-49f6-a417-55ba1620408b"),
                            Value = "vmlbxnzkhfjmwmhinj"
                        },
                        new
                        {
                            Id = new Guid("66b3c269-8402-4435-be48-5e6cdffd1026"),
                            Value = "lfkikxdaznvehevj"
                        },
                        new
                        {
                            Id = new Guid("435745f0-da86-487a-abc3-4489807038ff"),
                            Value = "elimmqzmkzshlmsb"
                        },
                        new
                        {
                            Id = new Guid("4d82cae8-5f1e-47e2-b186-48453814996a"),
                            Value = "ojgriretivfybvvejk"
                        },
                        new
                        {
                            Id = new Guid("4733e61f-fe1a-4b8c-bc89-f8d371ed3ddc"),
                            Value = "sxuwueawvc"
                        },
                        new
                        {
                            Id = new Guid("5fcfed86-eb52-4540-a8af-f8e3c6f91d6a"),
                            Value = "nvgeeyoicbzhtbdc"
                        },
                        new
                        {
                            Id = new Guid("592b512b-cb63-40de-92c4-22b513f1a17c"),
                            Value = "hmdnhwfuif"
                        },
                        new
                        {
                            Id = new Guid("129f6cd9-913c-449c-b729-06f78cbf090e"),
                            Value = "wklveijlwwjqkjtug"
                        },
                        new
                        {
                            Id = new Guid("7d40cd9c-3f88-4897-a71f-1b0e10647416"),
                            Value = "xxduzqfstmezx"
                        },
                        new
                        {
                            Id = new Guid("70d05338-67ac-454a-8b7f-b84af55bbcad"),
                            Value = "evjuuhxowsy"
                        },
                        new
                        {
                            Id = new Guid("2f4f9fc9-aece-4746-8ae9-09fe83465f38"),
                            Value = "buhbucscqunpaz"
                        },
                        new
                        {
                            Id = new Guid("ca33407c-62cc-46b0-ae75-7046c8151e2e"),
                            Value = "eqcwpgwrynn"
                        },
                        new
                        {
                            Id = new Guid("ddf0fc33-bbb0-4087-9fcd-e9513a4f5a87"),
                            Value = "etyohcdmjrwgzu"
                        },
                        new
                        {
                            Id = new Guid("43367541-fc30-4471-bd58-3b603c1f8f8e"),
                            Value = "mnfbejxtwjgnaqcamvoxk"
                        },
                        new
                        {
                            Id = new Guid("1364d1b8-1cb3-4c4f-b8fe-84c788497f37"),
                            Value = "iboxjqirjfpya"
                        },
                        new
                        {
                            Id = new Guid("5f884a57-671c-48b7-9229-9cbab100130d"),
                            Value = "fqaznwimziwkc"
                        },
                        new
                        {
                            Id = new Guid("cb6d4040-242e-417d-aec9-f94e6d955288"),
                            Value = "pjzkuaopdtcgrp"
                        },
                        new
                        {
                            Id = new Guid("da9d6828-7d9e-4fb0-9bb8-5de756c9c5ab"),
                            Value = "yhztlrmxgftchm"
                        },
                        new
                        {
                            Id = new Guid("0ea43fa6-4e18-4e0e-a9bb-ce9f8b710089"),
                            Value = "vvjqtyzpykzxzqxcnqvcg"
                        },
                        new
                        {
                            Id = new Guid("b311830c-37ec-450b-9896-a120c125a521"),
                            Value = "fkpghxjlurgaf"
                        },
                        new
                        {
                            Id = new Guid("66b9ea7d-b974-417e-8394-3c0735b12839"),
                            Value = "hnbzdvnewjgqrj"
                        },
                        new
                        {
                            Id = new Guid("bc1ce5fd-4f03-4e21-8cde-54378739e736"),
                            Value = "fomfnproderstxfltxh"
                        },
                        new
                        {
                            Id = new Guid("ff338100-0f50-4a4f-aa38-e6cbc5f9920e"),
                            Value = "rauxcimebss"
                        },
                        new
                        {
                            Id = new Guid("9cb671b2-5619-459e-a977-093f2ae19827"),
                            Value = "ojqjrccvcfmjhwgq"
                        },
                        new
                        {
                            Id = new Guid("1aa142b2-34fe-4aa5-b4d8-285e4b5d6217"),
                            Value = "ispubvqkjzhrkanc"
                        },
                        new
                        {
                            Id = new Guid("41f67ba4-e319-4ee2-a576-2c5a8a03f40d"),
                            Value = "yenocfpnqzvemsy"
                        },
                        new
                        {
                            Id = new Guid("3978b679-e4a9-4467-af0f-3ed51417994c"),
                            Value = "opiccbsrgjxjqjoiy"
                        },
                        new
                        {
                            Id = new Guid("451dc86a-ded8-485f-b3f7-4aa2122e59a6"),
                            Value = "txhagejftikr"
                        },
                        new
                        {
                            Id = new Guid("83e58f7e-86a1-4336-836e-82070c0ed1af"),
                            Value = "vhcfuviigdc"
                        },
                        new
                        {
                            Id = new Guid("20fb5bdd-3725-46c7-bb75-34cbffffc8c3"),
                            Value = "jopgilbofywcmm"
                        },
                        new
                        {
                            Id = new Guid("c538d076-bf02-4011-8d1f-20b699183cd2"),
                            Value = "nqqzqtonqeaomzeq"
                        },
                        new
                        {
                            Id = new Guid("badeb3c4-ee7c-4502-ab02-da6b0b695014"),
                            Value = "cfrtpiawoslp"
                        },
                        new
                        {
                            Id = new Guid("7e93db2f-ab98-4533-aefd-66921ad2dc25"),
                            Value = "izjzlsbwdkyr"
                        },
                        new
                        {
                            Id = new Guid("dd7a39b2-7d80-472b-a46b-3b00a4bcfaf4"),
                            Value = "pxrfitwjuvgvvt"
                        },
                        new
                        {
                            Id = new Guid("dc31f74c-3313-4b64-90a9-c50059d3087e"),
                            Value = "naboipeqrg"
                        },
                        new
                        {
                            Id = new Guid("5439a0bb-e290-4054-a622-9d5a802b5139"),
                            Value = "dvkufcimwlguq"
                        },
                        new
                        {
                            Id = new Guid("475ae4cb-1638-4ff8-b868-2a3fa55d76f9"),
                            Value = "eenyyyqaknxjlgr"
                        },
                        new
                        {
                            Id = new Guid("6af98fb8-b5b9-4315-b701-2dde212f1911"),
                            Value = "ijhixlofbjugakrhvq"
                        },
                        new
                        {
                            Id = new Guid("a8e92287-b059-4c81-967a-5fb5a9ab0efb"),
                            Value = "ebwmqwaksf"
                        },
                        new
                        {
                            Id = new Guid("205363d4-916c-4b4f-a74a-39de1e070d71"),
                            Value = "prxbrhmnimjojsj"
                        },
                        new
                        {
                            Id = new Guid("f8420da0-b511-4191-9040-2f35d2f0c9f2"),
                            Value = "kuviquxkibxf"
                        },
                        new
                        {
                            Id = new Guid("92099213-47a9-4f4d-9216-5698c293ccf3"),
                            Value = "ikhjeoiwykmzdbss"
                        },
                        new
                        {
                            Id = new Guid("0bc8f2ec-bf0b-4eab-a336-84b19a28cca5"),
                            Value = "khrgjrvelwor"
                        },
                        new
                        {
                            Id = new Guid("e8037c54-6dd2-408a-a599-3fc071da8300"),
                            Value = "dcwfafbneydjexg"
                        },
                        new
                        {
                            Id = new Guid("ef42dddc-f084-4eac-94f1-de70e55b294b"),
                            Value = "umlkljcorqpvwgpj"
                        },
                        new
                        {
                            Id = new Guid("1ee89547-9a45-4b18-a5df-8efafb80166f"),
                            Value = "fltbpwmxxntbexoa"
                        },
                        new
                        {
                            Id = new Guid("ff7332ea-8bcc-4d64-855b-56bbefd3a37c"),
                            Value = "wougqfpggepcdc"
                        },
                        new
                        {
                            Id = new Guid("9c3ecb20-6c1c-4350-aaee-aeb37714e5b7"),
                            Value = "empkmhzdigofgrgjbl"
                        },
                        new
                        {
                            Id = new Guid("fba78cd1-d7ee-4092-9f1d-9ce2a5f7b39d"),
                            Value = "guaopcmvowqap"
                        },
                        new
                        {
                            Id = new Guid("db0d2242-5679-445d-9619-538b85a1c882"),
                            Value = "tfrcounzyvezwu"
                        },
                        new
                        {
                            Id = new Guid("3d992cfa-0186-435d-a156-b6db1c3c9660"),
                            Value = "zghkbctkbvu"
                        },
                        new
                        {
                            Id = new Guid("d4fd8f93-b8de-40ce-aece-ac2484b1e3d9"),
                            Value = "timrbhopwhfigsfmxmzyk"
                        },
                        new
                        {
                            Id = new Guid("e90f19b1-5d40-4d1d-8871-565f59f6788b"),
                            Value = "krgcbeawwxchz"
                        },
                        new
                        {
                            Id = new Guid("769cd7ea-ce39-414e-bebf-941702fad3bf"),
                            Value = "gqmsauiammo"
                        },
                        new
                        {
                            Id = new Guid("6eaf036a-d3e3-4bc6-8a5c-c9abe6fdcb89"),
                            Value = "bmxdwlsxfbjot"
                        },
                        new
                        {
                            Id = new Guid("d04cac51-debb-4638-910a-e8711213d5f9"),
                            Value = "vmlqylbofhzadfy"
                        },
                        new
                        {
                            Id = new Guid("7dc4f2b8-5c52-4516-9bb2-3e85de86ce1f"),
                            Value = "rtbsrvsnafsvfezju"
                        },
                        new
                        {
                            Id = new Guid("bd192a28-c45c-4602-8fc4-7a3df09a916b"),
                            Value = "zonxfqommuf"
                        },
                        new
                        {
                            Id = new Guid("680d2e58-d2cb-41c4-abd9-41b7bc6d3095"),
                            Value = "cfatezthwvaputxwzl"
                        },
                        new
                        {
                            Id = new Guid("11dc9f2f-1525-42dd-bbb8-4892b5b162b9"),
                            Value = "eyxrbtbkknpnwekbxsw"
                        },
                        new
                        {
                            Id = new Guid("00be3fde-ec4a-481c-99b3-ffcb503ef9a9"),
                            Value = "dbtsbdcwqzqxltq"
                        },
                        new
                        {
                            Id = new Guid("11ccca18-4165-4372-9bfa-b8e1f173c0b9"),
                            Value = "nmpuzliabt"
                        },
                        new
                        {
                            Id = new Guid("b5b43e1e-06c2-4e1a-9bac-e86cf9e5ff22"),
                            Value = "xmahgfyhodomdwsffqzpntf"
                        },
                        new
                        {
                            Id = new Guid("9c7b5f75-ac71-4ffb-9597-cb3dd5df1349"),
                            Value = "rjuexilwnizoanw"
                        },
                        new
                        {
                            Id = new Guid("e69600e5-6774-4789-955f-633452e45b32"),
                            Value = "yfrfiyrvpinrs"
                        },
                        new
                        {
                            Id = new Guid("92c3c148-4b0b-453d-8562-39f13cb714c6"),
                            Value = "mbdiwvaupgznsb"
                        },
                        new
                        {
                            Id = new Guid("77f5b013-fb46-4121-a0d5-b37c8f6739f9"),
                            Value = "fmqhgbhymww"
                        },
                        new
                        {
                            Id = new Guid("9b9b8262-4c14-4cea-977a-7d4dbd796ac9"),
                            Value = "ltpcphkqqufmfd"
                        },
                        new
                        {
                            Id = new Guid("7663be1d-b2c7-438d-9fb4-90124fa0e6c5"),
                            Value = "eemekbghilxe"
                        },
                        new
                        {
                            Id = new Guid("b20ca431-76ca-46d1-b23c-69231178ae71"),
                            Value = "dwcbjonimwftrbjy"
                        },
                        new
                        {
                            Id = new Guid("664d59e5-b2e2-4480-acfd-caeef5033257"),
                            Value = "luvqhawpjakdrgjaf"
                        },
                        new
                        {
                            Id = new Guid("b4229885-3bcd-4a57-8b57-b8fa93898cea"),
                            Value = "peyrclbpyazhl"
                        },
                        new
                        {
                            Id = new Guid("34a08b82-4222-400a-8372-bfa5881bf81a"),
                            Value = "rwntotbnsonm"
                        },
                        new
                        {
                            Id = new Guid("31190b67-58b5-478b-89b4-33ba8974eda1"),
                            Value = "ebhfpegamuvydkw"
                        },
                        new
                        {
                            Id = new Guid("009c9122-f436-4fbb-9f8d-4420556ad2fe"),
                            Value = "hxkpsfsvjx"
                        },
                        new
                        {
                            Id = new Guid("31c74f5f-07a6-4701-9b44-098a7ec837d4"),
                            Value = "stlhczclopu"
                        });
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.FileInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MessageFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MimeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("MessageFileId")
                        .IsUnique()
                        .HasFilter("[MessageFileId] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("FileInformations");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Invitation", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InvitedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InviterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId", "InvitedUserId", "InviterId");

                    b.HasIndex("InvitedUserId");

                    b.HasIndex("InviterId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Ip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsInBan")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ips");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.MessageFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("MessageFiles");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserCountry", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "CountryId");

                    b.HasIndex("CountryId");

                    b.ToTable("UserCountries");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserGroup", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCreator")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLeaved")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserIp", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IpId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "IpId");

                    b.HasIndex("IpId");

                    b.ToTable("UserIps");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Application", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Applications")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Connection", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Connections")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.FileInformation", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("ImageInformations")
                        .HasForeignKey("GroupId");

                    b.HasOne("SuperMessenger.Models.EntityFramework.MessageFile", "MessageFile")
                        .WithOne("FileInformation")
                        .HasForeignKey("SuperMessenger.Models.EntityFramework.FileInformation", "MessageFileId");

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("AvatarInformations")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Invitation", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Invitations")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "InvitedUser")
                        .WithMany("InvitationsForMe")
                        .HasForeignKey("InvitedUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "Inviter")
                        .WithMany("InvitationsFromMe")
                        .HasForeignKey("InviterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Message", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Messages")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.MessageFile", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("MessageFiles")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("MessageFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserCountry", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Country", "Country")
                        .WithMany("UserCountries")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserCountries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserGroup", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserIp", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Ip", "Ip")
                        .WithMany("UserIps")
                        .HasForeignKey("IpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserIps")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
