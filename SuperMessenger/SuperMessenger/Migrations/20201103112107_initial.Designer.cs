// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperMessenger.Data;

namespace SuperMessenger.Migrations
{
    [DbContext(typeof(SuperMessengerDbContext))]
    [Migration("20201103112107_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Application", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsInBan")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f264e611-b563-49d6-8df6-44992011e7a7"),
                            Value = "icjxbcancqgbd"
                        },
                        new
                        {
                            Id = new Guid("f7f7a880-4351-4129-b3cc-e9049f93aa98"),
                            Value = "ayzipwoobgriqyudfx"
                        },
                        new
                        {
                            Id = new Guid("0de89b35-4ac1-4acf-b4b0-a4a7f328d2f1"),
                            Value = "ghaddvqcinhq"
                        },
                        new
                        {
                            Id = new Guid("1a909083-cccf-47b8-a077-1acc97997bde"),
                            Value = "myrbutdokggn"
                        },
                        new
                        {
                            Id = new Guid("8a487ce7-f9c1-4cd6-8cba-1cbe84e142e6"),
                            Value = "wjvmhwzegfxyura"
                        },
                        new
                        {
                            Id = new Guid("ecfaaf8b-1f3a-41fb-8746-0a7c57ed1fa7"),
                            Value = "nnvgsvdybj"
                        },
                        new
                        {
                            Id = new Guid("c06d4880-b826-4c78-b6bf-f9c6ed2af73e"),
                            Value = "ivdkkdfiqcxb"
                        },
                        new
                        {
                            Id = new Guid("4663d098-8120-4f53-9062-77fb45844119"),
                            Value = "uvpqafdgafrjataut"
                        },
                        new
                        {
                            Id = new Guid("90b2b23b-7714-476a-ada4-38defad6112f"),
                            Value = "dnubdtreejxeei"
                        },
                        new
                        {
                            Id = new Guid("ebd9654f-336e-4dff-b24f-3cfd99759217"),
                            Value = "kyjgnesnymmtogdg"
                        },
                        new
                        {
                            Id = new Guid("a6a66f55-4aab-499f-88d8-c0a6f253683d"),
                            Value = "onrslmdsdmfuoxvx"
                        },
                        new
                        {
                            Id = new Guid("9364a250-0a85-404d-98f2-bc1f8af92d1b"),
                            Value = "pnlszzegtkhkskv"
                        },
                        new
                        {
                            Id = new Guid("4dfee626-fbc8-4d01-95cb-0b611e3005fe"),
                            Value = "tearzccoviikvofhwgaf"
                        },
                        new
                        {
                            Id = new Guid("097b83a5-9891-4e33-b14d-e6867958329d"),
                            Value = "izodxtzflijdeeowz"
                        },
                        new
                        {
                            Id = new Guid("e1d10742-4089-49cf-9fb6-15fa3ba36427"),
                            Value = "cnkdgleagtvn"
                        },
                        new
                        {
                            Id = new Guid("61e33bcb-266b-44fd-a6ab-c18384811434"),
                            Value = "eptntoleexmovni"
                        },
                        new
                        {
                            Id = new Guid("6e9fc326-2c99-4cb3-a97d-49695a1b9386"),
                            Value = "wawtfxxqzllge"
                        },
                        new
                        {
                            Id = new Guid("2bd22832-f40c-4557-8b01-11aa92774c8a"),
                            Value = "surikrsivnavrng"
                        },
                        new
                        {
                            Id = new Guid("cf6aa2f7-ab37-4f14-82de-2d1dab714355"),
                            Value = "bmkrxvjhgxfj"
                        },
                        new
                        {
                            Id = new Guid("a9af0b3d-fbe7-408b-9dd9-0797e8145f39"),
                            Value = "goakdljhiazfehv"
                        },
                        new
                        {
                            Id = new Guid("7e8643b5-f662-4c41-9d88-0364856e9a46"),
                            Value = "mnemqcrmeiauu"
                        },
                        new
                        {
                            Id = new Guid("ee686e20-0906-4b54-8cfb-88fb7e1ffdc3"),
                            Value = "qriguuatvhok"
                        },
                        new
                        {
                            Id = new Guid("811776d4-6ed0-4d13-a1fa-4813e89c5c0b"),
                            Value = "mjrjyeidxbnbyqmy"
                        },
                        new
                        {
                            Id = new Guid("8fdf7274-3ec0-48e7-a290-d408037bb5b7"),
                            Value = "iwuvzzkdcysfb"
                        },
                        new
                        {
                            Id = new Guid("d89fe5ab-9a01-42ac-9f90-be48853b4757"),
                            Value = "jqxkyopzgtmjyzdspmica"
                        },
                        new
                        {
                            Id = new Guid("9155d257-8b06-40b1-ba8f-a672ef7636f5"),
                            Value = "wncrcqvgxnitem"
                        },
                        new
                        {
                            Id = new Guid("617104bf-67e6-4e2a-a70d-f0f7a2a982db"),
                            Value = "zojxrermgahvqha"
                        },
                        new
                        {
                            Id = new Guid("d94465b6-a004-4171-b872-50d133f8dcff"),
                            Value = "gkhfaaakzoddubn"
                        },
                        new
                        {
                            Id = new Guid("b405d069-c7f4-466a-9810-77f375261640"),
                            Value = "koalwdtxcengudb"
                        },
                        new
                        {
                            Id = new Guid("d9012a0a-8741-4df7-a42d-bb8d0871ea30"),
                            Value = "ygtlkbwlalcyyk"
                        },
                        new
                        {
                            Id = new Guid("4a7fa47c-29cc-4a67-b025-a70438bc4d70"),
                            Value = "defeqjwtteylbpqn"
                        },
                        new
                        {
                            Id = new Guid("44a068ac-8aee-4d83-8467-99b66797f172"),
                            Value = "skwvwsiodwubnliyi"
                        },
                        new
                        {
                            Id = new Guid("070b3b25-9adc-4e61-a32f-3447cc9e8c67"),
                            Value = "nosbsonrmvzsdfzba"
                        },
                        new
                        {
                            Id = new Guid("ae96e958-e5d3-47c1-9fdf-cfad9f6ef83b"),
                            Value = "wixqzaojzsifm"
                        },
                        new
                        {
                            Id = new Guid("167c5020-eebe-425a-8fb7-24de12cc954d"),
                            Value = "cqtzzowwkhiz"
                        },
                        new
                        {
                            Id = new Guid("16013ff8-f42e-419a-aa94-2c890cf2372e"),
                            Value = "hsiqpcenuipwvq"
                        },
                        new
                        {
                            Id = new Guid("b63673ef-7e16-495c-ad5d-3a66c299a9cd"),
                            Value = "uhompoetlwbgrk"
                        },
                        new
                        {
                            Id = new Guid("309d4a3a-f7d4-4d5d-a16f-4c5e416a5942"),
                            Value = "kygcuuhtnprpkg"
                        },
                        new
                        {
                            Id = new Guid("254684c9-a540-47b8-ad1c-ecf6b4e20067"),
                            Value = "wbbdmlzpuiwgxze"
                        },
                        new
                        {
                            Id = new Guid("2086247c-bb78-4644-9270-2d5589ee67f2"),
                            Value = "petozemmsssrsgn"
                        },
                        new
                        {
                            Id = new Guid("a448a4df-29af-4fbc-98b0-320e5ce7c5e0"),
                            Value = "lcsuinxdrvwl"
                        },
                        new
                        {
                            Id = new Guid("b886e2c1-cfe2-4436-b37c-59c4f1b74641"),
                            Value = "gfmtjqhxekobwcyya"
                        },
                        new
                        {
                            Id = new Guid("bd0d89bb-9ec9-4215-8900-bd958aac5485"),
                            Value = "jsfoyksicxmqybzrd"
                        },
                        new
                        {
                            Id = new Guid("31c3cc9e-fcfd-4051-b7a2-0ef62e6e6dde"),
                            Value = "knlfbfsrybzmgrea"
                        },
                        new
                        {
                            Id = new Guid("358b5ee9-4ccb-44fb-b8de-9924d66199ab"),
                            Value = "kgwchuogyghlptqfzil"
                        },
                        new
                        {
                            Id = new Guid("207fa4c9-b6e5-42e2-b450-5bb745a78c6e"),
                            Value = "qsjfigddvhxujiq"
                        },
                        new
                        {
                            Id = new Guid("94883d6d-ad01-4c25-91ac-939fb82c84fc"),
                            Value = "wqexigyrsueiy"
                        },
                        new
                        {
                            Id = new Guid("601de194-f3a3-4962-9511-894eb0a09d51"),
                            Value = "hibvpdpkohgfwmsmap"
                        },
                        new
                        {
                            Id = new Guid("1779383e-4e24-431e-b87f-9a05f17bdddb"),
                            Value = "xbaqwpeniprfkgmd"
                        },
                        new
                        {
                            Id = new Guid("19784330-adc5-4bee-ac94-2a2175286d08"),
                            Value = "ymspcrpoaq"
                        },
                        new
                        {
                            Id = new Guid("9763d4a7-ebc9-45f2-a1c2-fcd47ffb5fbb"),
                            Value = "iyswbbldkpgpydagh"
                        },
                        new
                        {
                            Id = new Guid("e2d4d396-b0b4-47c8-9888-86f3ee4cbd14"),
                            Value = "iawxcqhydatkxepohukt"
                        },
                        new
                        {
                            Id = new Guid("6e57145c-dc4a-4fb4-aca3-c956062dbb29"),
                            Value = "oyqfwmdpsrhk"
                        },
                        new
                        {
                            Id = new Guid("a6e9ae28-a99f-4dab-b535-3f078280532f"),
                            Value = "xqfhrfakonssjk"
                        },
                        new
                        {
                            Id = new Guid("fede565c-6970-4d6c-b8b1-cf20af899550"),
                            Value = "bcpcrolsrwprzt"
                        },
                        new
                        {
                            Id = new Guid("6c4ae38c-a052-4e11-bd7f-37790a4ee180"),
                            Value = "beeaookcxruzv"
                        },
                        new
                        {
                            Id = new Guid("5af7d5b6-6919-4b8d-8547-c6c4bdba0757"),
                            Value = "lxycczwhhyvy"
                        },
                        new
                        {
                            Id = new Guid("3dfb3b5d-8ed8-418a-be51-d67ac3667c7e"),
                            Value = "cqokhxvfhnyhofvw"
                        },
                        new
                        {
                            Id = new Guid("90467dc2-14bf-4e66-81f4-65b94f3ef6fb"),
                            Value = "waeuecmtypdidxn"
                        },
                        new
                        {
                            Id = new Guid("0f25bb76-9c63-46d6-8adc-1863fc6e09aa"),
                            Value = "sutvlifcedzwbgij"
                        },
                        new
                        {
                            Id = new Guid("ade69ead-4cea-4665-80b1-978fe2381b8e"),
                            Value = "vtnokrbpuzkmcfnuhjj"
                        },
                        new
                        {
                            Id = new Guid("4d0a5a35-b319-44c0-9709-152b09c76265"),
                            Value = "lvbxkgxrayqqphevl"
                        },
                        new
                        {
                            Id = new Guid("7bc4d90e-2b86-4243-aaec-6679279f9c8b"),
                            Value = "vfpxhhyjxu"
                        },
                        new
                        {
                            Id = new Guid("7e326017-6937-4e4f-975a-b171b8e0ccf9"),
                            Value = "yzwvvcxymlahmykhbw"
                        },
                        new
                        {
                            Id = new Guid("51b7cb41-0fee-49db-9b1c-5552ec6d4f79"),
                            Value = "sudsatnahprnzxlzptrxp"
                        },
                        new
                        {
                            Id = new Guid("de691b7d-32c6-4971-b7a5-77746c73ded2"),
                            Value = "hkmihjmhwlf"
                        },
                        new
                        {
                            Id = new Guid("9cb2640e-d390-4744-a86c-28e5bf6a3944"),
                            Value = "vrrsjthizbsclo"
                        },
                        new
                        {
                            Id = new Guid("4581e5b2-d2a9-4b02-9060-9299470e9dbb"),
                            Value = "dglawbqzyncqj"
                        },
                        new
                        {
                            Id = new Guid("e89dc916-f6ba-418e-9e0f-b3f05292abc3"),
                            Value = "uydgfbzplcgni"
                        },
                        new
                        {
                            Id = new Guid("14e15020-8ab1-4284-9b22-c65d50badc87"),
                            Value = "hsvaljyufffiezrlc"
                        },
                        new
                        {
                            Id = new Guid("18ab75cc-d4f8-4b85-9b2a-d4ecd33dcbf3"),
                            Value = "nkkbgbsiqnunorpkt"
                        },
                        new
                        {
                            Id = new Guid("a4f13340-dabe-48f6-8db3-9cdd86a9ef53"),
                            Value = "hrojcdwowyemyltei"
                        },
                        new
                        {
                            Id = new Guid("d2c32e27-2c86-40b5-a744-eed48640f5ca"),
                            Value = "mhbhvfgrhfiahuksr"
                        },
                        new
                        {
                            Id = new Guid("a7f4acaa-70a0-4f35-ae1f-dd0679811456"),
                            Value = "wptpgmoepdekizwg"
                        },
                        new
                        {
                            Id = new Guid("4e08c438-6645-4193-aca4-e1be51cd06d3"),
                            Value = "yyzgrdofbwqxycpoi"
                        },
                        new
                        {
                            Id = new Guid("c2c7db54-d7a0-4bf0-a82a-45a3922ecb5a"),
                            Value = "hepyevktopbtlj"
                        },
                        new
                        {
                            Id = new Guid("6135a66f-d4fb-4510-9330-96b4437c6908"),
                            Value = "fmrznrkytczbykl"
                        },
                        new
                        {
                            Id = new Guid("c5435f8f-9911-4619-9ab3-e6e1055e31b3"),
                            Value = "nqpmxxeqfrsigtdmi"
                        },
                        new
                        {
                            Id = new Guid("7f49db09-8540-44f6-a769-258099c122e5"),
                            Value = "xstzbxvxsmguabk"
                        },
                        new
                        {
                            Id = new Guid("53722c9c-b193-45f5-ba4f-765240c720e7"),
                            Value = "tuwmlcurchrolzd"
                        },
                        new
                        {
                            Id = new Guid("656ce00f-2865-485f-bf77-0971a1b45be6"),
                            Value = "upuntwueksjmxxxdf"
                        },
                        new
                        {
                            Id = new Guid("179b83b8-6f68-4c87-97dd-8b45d8d87952"),
                            Value = "mewfovszzg"
                        },
                        new
                        {
                            Id = new Guid("23d1b6f8-d7f5-4a6d-96e5-e5c530c5f8fc"),
                            Value = "hgdccuwvmjoz"
                        },
                        new
                        {
                            Id = new Guid("c444722d-aa5c-4419-a4a9-331ddff1dac7"),
                            Value = "fyezqjrjhs"
                        },
                        new
                        {
                            Id = new Guid("ba754f2d-7436-44b2-b910-d890a264d2da"),
                            Value = "vdnwcvkdhscnieb"
                        },
                        new
                        {
                            Id = new Guid("8baf9240-2d55-4c17-af5b-62926512f75b"),
                            Value = "hmnpvlvsuy"
                        },
                        new
                        {
                            Id = new Guid("7d9558be-b922-4b9d-b983-5d235421a8aa"),
                            Value = "afbakvyenjfrsynt"
                        },
                        new
                        {
                            Id = new Guid("db66512c-b2ff-4f69-870f-ee3a1bd96df3"),
                            Value = "wvvezgsaiqidojl"
                        },
                        new
                        {
                            Id = new Guid("93604537-f5e9-4737-9e06-dfcd97d5ea76"),
                            Value = "cohrcclbtbdon"
                        },
                        new
                        {
                            Id = new Guid("ecfd39a0-5b48-481f-b5c6-024c130bddd9"),
                            Value = "sdelwvfnjccwtzz"
                        },
                        new
                        {
                            Id = new Guid("66942b5b-8b90-4711-acb0-bfbc87c7b2a0"),
                            Value = "obtsmgvfnptlg"
                        },
                        new
                        {
                            Id = new Guid("cfa50a51-4a2d-4b08-a56c-ca8a91085664"),
                            Value = "tueoprngrh"
                        },
                        new
                        {
                            Id = new Guid("5b8b6100-f7eb-4c91-9dac-bffc704e635d"),
                            Value = "nlkwrtmemmrsv"
                        },
                        new
                        {
                            Id = new Guid("14f312f2-452c-4cef-96d4-2359e46e57cb"),
                            Value = "muzwggrcgcsytu"
                        },
                        new
                        {
                            Id = new Guid("9c6c16f1-74e8-4a3b-8d1c-1fd9fbab3450"),
                            Value = "vmnjoqtijosxzjof"
                        },
                        new
                        {
                            Id = new Guid("fca80b0c-3d7e-47e4-9da5-6c95dfcdc0fc"),
                            Value = "isjjaelfzyliusnajlp"
                        },
                        new
                        {
                            Id = new Guid("b7e599a2-d60f-4907-a964-8b37a2f80f0d"),
                            Value = "rvugwfeaczzjrp"
                        },
                        new
                        {
                            Id = new Guid("1b4d7b55-8677-463f-80b7-8f8fab5acadd"),
                            Value = "nakbnavvtikjmfp"
                        },
                        new
                        {
                            Id = new Guid("49d560b3-eab9-4778-a887-3c3e23f296d9"),
                            Value = "cxldytnloxvsekl"
                        },
                        new
                        {
                            Id = new Guid("0294acea-939f-4374-9688-83b7f6575c69"),
                            Value = "blknccksquibvr"
                        });
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Invitation", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InvitedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InviterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId", "InvitedUserId", "InviterId");

                    b.HasIndex("InvitedUserId");

                    b.HasIndex("InviterId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Ip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsInBan")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ips");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Message", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.SentFile", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("SentFiles");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserCountry", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "CountryId");

                    b.HasIndex("CountryId");

                    b.ToTable("UserCountries");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserGroup", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsCreator")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLeaved")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserIp", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IpId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "IpId");

                    b.HasIndex("IpId");

                    b.ToTable("UserIps");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Application", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Applications")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Invitation", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Invitations")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "InvitedUser")
                        .WithMany("InvitationsForMe")
                        .HasForeignKey("InvitedUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "Inviter")
                        .WithMany("InvitationsFromMe")
                        .HasForeignKey("InviterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Message", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Messages")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.SentFile", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("SentFiles")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("SentFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserCountry", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Country", "Country")
                        .WithMany("UserCountries")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserCountries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserGroup", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserIp", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Ip", "Ip")
                        .WithMany("UserIps")
                        .HasForeignKey("IpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserIps")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
