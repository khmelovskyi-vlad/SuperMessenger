// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperMessenger.Data;

namespace SuperMessenger.Migrations
{
    [DbContext(typeof(SuperMessengerDbContext))]
    [Migration("20201129124629_GroupDescriptionFilePathSentFileType")]
    partial class GroupDescriptionFilePathSentFileType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Application", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsInBan")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("20fa2a33-97d4-4d85-904f-081a14d2a6d5"),
                            Value = "iufakmxdxicv"
                        },
                        new
                        {
                            Id = new Guid("f8ea97ec-ad65-4a0c-951a-bb52d8e720fd"),
                            Value = "nldijhrrxgd"
                        },
                        new
                        {
                            Id = new Guid("82ea3a68-78c0-47dd-ae15-a6182803b85b"),
                            Value = "gjgtlizathunxn"
                        },
                        new
                        {
                            Id = new Guid("39574472-e44e-4f2a-a4fc-30bb84993401"),
                            Value = "pcwjikkddvnimjdppv"
                        },
                        new
                        {
                            Id = new Guid("ca3616ce-acd9-4987-ad36-00c5b2f564db"),
                            Value = "fjlbyzxzgcg"
                        },
                        new
                        {
                            Id = new Guid("415b486e-4392-441e-b17c-c129ca9f089b"),
                            Value = "vrmaabogcznzuhay"
                        },
                        new
                        {
                            Id = new Guid("4b477a07-72be-4b8f-93f2-03901dac4c52"),
                            Value = "drqlnlvglammmv"
                        },
                        new
                        {
                            Id = new Guid("fc66c54d-ed50-4f2f-aa65-9c200642c5dc"),
                            Value = "wztyiqpkjg"
                        },
                        new
                        {
                            Id = new Guid("5f955ba4-90d3-40e4-8862-09c5c8e42c41"),
                            Value = "oyrbhugsuzlntl"
                        },
                        new
                        {
                            Id = new Guid("5ffc681d-7eb7-4776-9100-64fd7d913701"),
                            Value = "cpkmitwvgjcxtlpu"
                        },
                        new
                        {
                            Id = new Guid("3066c96c-6466-4a88-b4e4-b5d2099eaa7d"),
                            Value = "gqejkzlcmnko"
                        },
                        new
                        {
                            Id = new Guid("e2cb9d15-bcd2-4d19-89ed-6066cf51360a"),
                            Value = "jvmhwvrokcbhp"
                        },
                        new
                        {
                            Id = new Guid("cc18d1e6-7369-42e1-ae47-c1de7dba1e45"),
                            Value = "hoqwhcdsynkc"
                        },
                        new
                        {
                            Id = new Guid("53b3b6ed-cb05-4188-a301-5b3a2343ac3a"),
                            Value = "lggpwisphlugsb"
                        },
                        new
                        {
                            Id = new Guid("73ad49df-c819-4131-9fb0-433d550e35e2"),
                            Value = "cbglsboshba"
                        },
                        new
                        {
                            Id = new Guid("ca27bcf8-5f74-403b-9b2d-4977b662799e"),
                            Value = "rwwkldqtaefvszce"
                        },
                        new
                        {
                            Id = new Guid("22c17913-163d-4be7-91e3-8df1093f0a58"),
                            Value = "qwtscamctsnhqhzl"
                        },
                        new
                        {
                            Id = new Guid("97c15c78-e1fa-42f9-9f5d-1ba38fd02a3a"),
                            Value = "uxbpguvnvyjd"
                        },
                        new
                        {
                            Id = new Guid("1568bb3e-04b6-4fed-924e-480e90581852"),
                            Value = "uhidnarukjbnb"
                        },
                        new
                        {
                            Id = new Guid("677ede92-c492-48a3-b3be-0b200a484bab"),
                            Value = "nnwxgqwcnqrifozneqa"
                        },
                        new
                        {
                            Id = new Guid("8da63af5-7145-473b-aa2a-4b3fece56b5c"),
                            Value = "kkvixngzjnbztxbg"
                        },
                        new
                        {
                            Id = new Guid("ed613dc6-91df-4f69-965c-e38e0be78213"),
                            Value = "iipgiynjzjj"
                        },
                        new
                        {
                            Id = new Guid("f8302ecb-d163-47f7-a409-763a53d31342"),
                            Value = "vuwksxenzeo"
                        },
                        new
                        {
                            Id = new Guid("626f79a9-4ee0-4a49-bd22-e4d0d1035d85"),
                            Value = "gobxsbfmiuginnf"
                        },
                        new
                        {
                            Id = new Guid("b4a5c767-a083-4b5d-8ef8-795444263a37"),
                            Value = "pemaelrdyxwuq"
                        },
                        new
                        {
                            Id = new Guid("3c1adcf8-fad3-4c0d-933b-f7ff227d13f9"),
                            Value = "afoxrgcoklcewjv"
                        },
                        new
                        {
                            Id = new Guid("df8c3a05-8485-4a0d-ae61-42a96f8bf5a3"),
                            Value = "yxtiqrgmnewnqqf"
                        },
                        new
                        {
                            Id = new Guid("81704130-cd83-4906-8de1-7ae62cfd6bf9"),
                            Value = "qmsipwyxwneqtqirm"
                        },
                        new
                        {
                            Id = new Guid("033e7170-956f-41c6-9747-c0c363d24f60"),
                            Value = "ukqnikwnhhz"
                        },
                        new
                        {
                            Id = new Guid("041a7074-f310-4847-8b79-f893584f4d3d"),
                            Value = "pollhjdorbsfqoz"
                        },
                        new
                        {
                            Id = new Guid("2642e7b2-859a-4f1a-b7b1-6b878ddbcbb7"),
                            Value = "bzxfhuzpiupt"
                        },
                        new
                        {
                            Id = new Guid("5cef18a7-53b9-4926-95c4-432ee0829e90"),
                            Value = "ritfnjrvpkgg"
                        },
                        new
                        {
                            Id = new Guid("ab756dcd-00ee-4361-94ac-d2f13dbb3203"),
                            Value = "femaohkvzegae"
                        },
                        new
                        {
                            Id = new Guid("50febb03-93c5-497f-aa2e-9d3e72621e04"),
                            Value = "izogjoehlofiu"
                        },
                        new
                        {
                            Id = new Guid("055a4073-1f61-4e63-b332-83a3810ff4b4"),
                            Value = "eqjarupank"
                        },
                        new
                        {
                            Id = new Guid("a192e3cb-ee21-4dc7-a871-ea0eb9ecb6e3"),
                            Value = "ypqywrmzvprnva"
                        },
                        new
                        {
                            Id = new Guid("beed4250-4e4f-48aa-a55f-2bb4308ed21f"),
                            Value = "vjzzupzwhctgvi"
                        },
                        new
                        {
                            Id = new Guid("ccb85f07-da72-443c-9f5d-795bc19c8388"),
                            Value = "ovpwjvrlcvnucep"
                        },
                        new
                        {
                            Id = new Guid("ed93183c-2a8c-4439-95e2-faf6cf3c88fd"),
                            Value = "ycbitwqbqunjaxghdx"
                        },
                        new
                        {
                            Id = new Guid("f107cf76-d25e-4bf8-b819-4f14457496f6"),
                            Value = "ufisqqiumlsdr"
                        },
                        new
                        {
                            Id = new Guid("58c0d769-6e78-4fcd-8986-e1b318812882"),
                            Value = "stjmlzlsspjxnnp"
                        },
                        new
                        {
                            Id = new Guid("422e344a-f55f-41d6-a53e-c579d0d9ad0b"),
                            Value = "cenhasfawvp"
                        },
                        new
                        {
                            Id = new Guid("9ff417a3-334d-462b-ac79-46039d273269"),
                            Value = "ngjnffarmzbddlxvaqhy"
                        },
                        new
                        {
                            Id = new Guid("6c1322ba-3b9f-48d9-93a2-48598bfeb705"),
                            Value = "heqsuznwnwwllbwsq"
                        },
                        new
                        {
                            Id = new Guid("29ea1884-b91e-470c-ae27-27abf55913b9"),
                            Value = "etmlleusvxq"
                        },
                        new
                        {
                            Id = new Guid("a35301d0-1c9b-46a0-b4f4-70afabad3363"),
                            Value = "nyiqzkcmsnoiw"
                        },
                        new
                        {
                            Id = new Guid("23a54d80-ba6c-4ce2-ba43-55e7ce757fd6"),
                            Value = "xsdfrrhjbbyrf"
                        },
                        new
                        {
                            Id = new Guid("3aa77058-9cc3-4337-a918-2959cf179246"),
                            Value = "fmfrabopvidbxn"
                        },
                        new
                        {
                            Id = new Guid("faa11241-5a36-448d-bb98-04098d0f6700"),
                            Value = "uebxxyczbtmdwa"
                        },
                        new
                        {
                            Id = new Guid("91de7dcc-64b8-48b3-9fb7-e2359e4c4ee5"),
                            Value = "tqdsgxqpqwghx"
                        },
                        new
                        {
                            Id = new Guid("9233e05c-ba39-4d44-864c-7399a4943442"),
                            Value = "kdzybdcdaqyow"
                        },
                        new
                        {
                            Id = new Guid("c353cef4-70d7-49a3-8994-d5c04c0d781f"),
                            Value = "ycojpiaubbuayfwx"
                        },
                        new
                        {
                            Id = new Guid("691eb297-73aa-47da-be83-ba1de0b3327c"),
                            Value = "nglxysxeztivvikx"
                        },
                        new
                        {
                            Id = new Guid("72e7b08a-0c8b-4f27-ae85-91f29c7e862f"),
                            Value = "brqybqpptfmdj"
                        },
                        new
                        {
                            Id = new Guid("9866d7b3-ce5f-47d9-9574-314f81fa2e6d"),
                            Value = "giqqdqyqoovuoaom"
                        },
                        new
                        {
                            Id = new Guid("1c6ef35f-06bb-4d88-b43e-649a8cd2aef6"),
                            Value = "acjvgnojgawnryb"
                        },
                        new
                        {
                            Id = new Guid("8db3d2d5-01cf-4099-9fa8-e941827e054c"),
                            Value = "aucoeggnktukh"
                        },
                        new
                        {
                            Id = new Guid("e9db4ea9-5566-43e8-9e37-f5a01f8001bc"),
                            Value = "abyrrjhkbdzxuyo"
                        },
                        new
                        {
                            Id = new Guid("9b983ae1-9a63-4947-8a2f-6765f2aa152c"),
                            Value = "prtkpufjrqdxwoq"
                        },
                        new
                        {
                            Id = new Guid("cbe11393-5350-4449-8796-209587c699bf"),
                            Value = "ysjdsgthlwpsl"
                        },
                        new
                        {
                            Id = new Guid("54e6ceec-f3f4-4fb8-9ee8-2a42165cf2c4"),
                            Value = "rnsvhhvtrpru"
                        },
                        new
                        {
                            Id = new Guid("adb098ef-e9e0-4b66-bb64-7529204b2c0c"),
                            Value = "tdwhvlvakgl"
                        },
                        new
                        {
                            Id = new Guid("c44a5924-7071-400a-a901-7a2c44ef8a54"),
                            Value = "vbwdksturqctjgpys"
                        },
                        new
                        {
                            Id = new Guid("7def5392-40dc-428f-bad0-a4620c3fc7c4"),
                            Value = "bsmjtpeoecnfhwwa"
                        },
                        new
                        {
                            Id = new Guid("8276264f-01d5-4a10-989f-2b3f270c03a9"),
                            Value = "kqohhshrzxlva"
                        },
                        new
                        {
                            Id = new Guid("472cea02-6877-4fba-bce1-002ae14b9f37"),
                            Value = "wecpxpqxgy"
                        },
                        new
                        {
                            Id = new Guid("76dc59d7-7af2-41bc-a3cc-630b67c274df"),
                            Value = "fwdgwyhvrkicevob"
                        },
                        new
                        {
                            Id = new Guid("fa25179e-ee95-419a-927e-1be4c77f6d97"),
                            Value = "jmptdxejcxhmmvs"
                        },
                        new
                        {
                            Id = new Guid("8edf0ad3-30e5-4ae9-b759-7ffc25e8f23f"),
                            Value = "ziuvpjrtymzmf"
                        },
                        new
                        {
                            Id = new Guid("0d8817bc-942e-490b-bd64-e91361755065"),
                            Value = "veqstkrmyycohqvmp"
                        },
                        new
                        {
                            Id = new Guid("7442f013-27f9-4194-a897-5f60c79c6022"),
                            Value = "aqehdwevxk"
                        },
                        new
                        {
                            Id = new Guid("7c2d9d6c-5d34-4921-bd58-a06c6cb52864"),
                            Value = "nskcjagwevtjkv"
                        },
                        new
                        {
                            Id = new Guid("86bd9b50-958d-44af-a1ba-66be5df48a4b"),
                            Value = "peyfioqvicgmfcg"
                        },
                        new
                        {
                            Id = new Guid("364a5b8d-5681-456f-b163-3bd26f273374"),
                            Value = "pnfiyjzqrpnbxoqihy"
                        },
                        new
                        {
                            Id = new Guid("e29edcd7-b8db-4a5b-b24a-d512d2836fef"),
                            Value = "zaqgwjeizw"
                        },
                        new
                        {
                            Id = new Guid("f2600891-a5a5-4701-9694-879b5ddb9c78"),
                            Value = "whrjohaxbor"
                        },
                        new
                        {
                            Id = new Guid("1e3d19ed-1b3d-4a7b-8b77-8f10bca15361"),
                            Value = "flaicdlpqfk"
                        },
                        new
                        {
                            Id = new Guid("c2a30c91-9e2c-4de2-a1e4-a0bdfbc19860"),
                            Value = "ekxhhtborslowwxt"
                        },
                        new
                        {
                            Id = new Guid("419aa3a3-1105-4b9a-bb44-4d3c5ce0a8fd"),
                            Value = "hfyuwhruocvhyljv"
                        },
                        new
                        {
                            Id = new Guid("0fc6a609-6355-4dc6-9f9b-63350c617733"),
                            Value = "wxuukauxwyjr"
                        },
                        new
                        {
                            Id = new Guid("31cf2bb8-e75c-41e0-88e5-4a08fc6ebacf"),
                            Value = "qzlazttvtazarylo"
                        },
                        new
                        {
                            Id = new Guid("efc83352-5002-4077-a1c6-bba01fe358cb"),
                            Value = "izwbajfpjxu"
                        },
                        new
                        {
                            Id = new Guid("9c127ff7-1ad0-488d-a8d7-274fd70bbf0d"),
                            Value = "skpugzqmmgilku"
                        },
                        new
                        {
                            Id = new Guid("efcab43f-a690-477e-81aa-dd61fee7de90"),
                            Value = "rcqjzxemsgtsc"
                        },
                        new
                        {
                            Id = new Guid("707fc180-8829-4826-b6c0-938f00a8742d"),
                            Value = "zoixecpkmsogkfgo"
                        },
                        new
                        {
                            Id = new Guid("5e75b38d-4053-4d68-9104-758668389ef5"),
                            Value = "fngoniztxfbawuyl"
                        },
                        new
                        {
                            Id = new Guid("195f1104-53e3-41d0-ae44-dff6215eab6f"),
                            Value = "msbtwrcxrnvsukcdan"
                        },
                        new
                        {
                            Id = new Guid("a25f73db-650b-4ae7-9fae-ec5767fbc115"),
                            Value = "kzgkvlaaxbjmy"
                        },
                        new
                        {
                            Id = new Guid("38a63253-0586-465a-a3ff-f3b70546f47b"),
                            Value = "xwxllygzuycy"
                        },
                        new
                        {
                            Id = new Guid("d605d91c-b9f5-425a-880c-3b8735915c4f"),
                            Value = "lrkmrolfzjljdv"
                        },
                        new
                        {
                            Id = new Guid("fd80f42d-341a-4796-a4a0-93e969da40a2"),
                            Value = "lwqczjkvalm"
                        },
                        new
                        {
                            Id = new Guid("4800797c-db15-47f9-907a-b7f379776573"),
                            Value = "pheeifsfcv"
                        },
                        new
                        {
                            Id = new Guid("698a591c-659a-4530-8066-b76d6deb87a0"),
                            Value = "abockmfpukh"
                        },
                        new
                        {
                            Id = new Guid("3d63d52e-3123-424b-b510-191706552040"),
                            Value = "ecviqbrmkldwllee"
                        },
                        new
                        {
                            Id = new Guid("e8e7426a-4388-4cb3-a492-bfe7c069af9b"),
                            Value = "lufssgrdiubmqf"
                        },
                        new
                        {
                            Id = new Guid("6edb69dd-7363-43af-b7f5-52703159d375"),
                            Value = "lxpjdtxwirakjogx"
                        },
                        new
                        {
                            Id = new Guid("397fe6a2-1d00-44df-9edd-29708cb73dca"),
                            Value = "bpitqucnynupmryh"
                        },
                        new
                        {
                            Id = new Guid("83de2fd4-2559-439f-8290-691cbe60ad0b"),
                            Value = "ddgroqktvnnbuvcfn"
                        },
                        new
                        {
                            Id = new Guid("4b35a386-33d9-4f4e-8808-ddef4e847410"),
                            Value = "iiippegpcxikj"
                        },
                        new
                        {
                            Id = new Guid("2aeab7da-4b94-43bc-8bb3-1d68dbb7b635"),
                            Value = "vechrqnottns"
                        });
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Invitation", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InvitedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InviterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId", "InvitedUserId", "InviterId");

                    b.HasIndex("InvitedUserId");

                    b.HasIndex("InviterId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Ip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsInBan")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ips");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.SentFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MimeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("SentFiles");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserCountry", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "CountryId");

                    b.HasIndex("CountryId");

                    b.ToTable("UserCountries");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserGroup", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCreator")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLeaved")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserIp", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IpId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "IpId");

                    b.HasIndex("IpId");

                    b.ToTable("UserIps");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Application", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Applications")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Invitation", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Invitations")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "InvitedUser")
                        .WithMany("InvitationsForMe")
                        .HasForeignKey("InvitedUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "Inviter")
                        .WithMany("InvitationsFromMe")
                        .HasForeignKey("InviterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Message", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Messages")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.SentFile", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("SentFiles")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("SentFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserCountry", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Country", "Country")
                        .WithMany("UserCountries")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserCountries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserGroup", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserIp", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Ip", "Ip")
                        .WithMany("UserIps")
                        .HasForeignKey("IpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserIps")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
