// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperMessenger.Data;

namespace SuperMessenger.Migrations
{
    [DbContext(typeof(SuperMessengerDbContext))]
    partial class SuperMessengerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Application", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsInBan")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7487ec6b-758c-4c3e-9e68-c1ebcf28cc15"),
                            Value = "tjcdveceywyor"
                        },
                        new
                        {
                            Id = new Guid("c33e0d80-8e48-4cfe-99db-7ac65fe9be1e"),
                            Value = "fmxgxfrunkox"
                        },
                        new
                        {
                            Id = new Guid("cd5b1303-9093-4db1-8b3f-62c8167a6f11"),
                            Value = "tpgihxkmihsvh"
                        },
                        new
                        {
                            Id = new Guid("b2924af4-03ef-4091-bf91-eae41289bdc8"),
                            Value = "ghmuylbubvzjkko"
                        },
                        new
                        {
                            Id = new Guid("87906ca8-b50d-4ed1-8082-ba62306e8077"),
                            Value = "zxdjzdeqvvgy"
                        },
                        new
                        {
                            Id = new Guid("5c6dd056-4157-4987-a3ff-ae137f566988"),
                            Value = "mdzpglvklllhjko"
                        },
                        new
                        {
                            Id = new Guid("c1a854cb-ff9c-4650-a7b2-2485ec23a258"),
                            Value = "guxpfvmchaqhhjk"
                        },
                        new
                        {
                            Id = new Guid("33a9ffbd-ac02-4be2-a416-60c885dbae45"),
                            Value = "dyjzmwhhpphisxccfsnthou"
                        },
                        new
                        {
                            Id = new Guid("28f08170-74ea-48b4-8a96-417624c3ea26"),
                            Value = "gzfxqbwqqh"
                        },
                        new
                        {
                            Id = new Guid("8f71fb74-1ca1-4120-9f30-988aa4992d76"),
                            Value = "xhmvzcmjcub"
                        },
                        new
                        {
                            Id = new Guid("42e5c75f-fae1-4c32-b8ce-90592b35bb2a"),
                            Value = "mxqxninddgkbmhvsv"
                        },
                        new
                        {
                            Id = new Guid("99d24d13-1a24-4297-b3a5-b1d323a64525"),
                            Value = "dxucdikdglmnjjasdz"
                        },
                        new
                        {
                            Id = new Guid("57f66411-42d7-41e2-a822-a257704aac32"),
                            Value = "xokfmowvtrpnroumai"
                        },
                        new
                        {
                            Id = new Guid("d4e711af-0fd5-4a1e-8c51-9d7a77810595"),
                            Value = "iodksdepbcwvuupl"
                        },
                        new
                        {
                            Id = new Guid("9529abcf-c1e8-44d2-a2e9-cff9ef4e1fe1"),
                            Value = "nftxxkngrumrgt"
                        },
                        new
                        {
                            Id = new Guid("8040bf6a-47fc-4314-969d-0c7f1587c31e"),
                            Value = "fsmaeettwtmtwnyfu"
                        },
                        new
                        {
                            Id = new Guid("b3ae758e-40f5-4bed-bd1a-37d020e6d955"),
                            Value = "xlznpbzwhphb"
                        },
                        new
                        {
                            Id = new Guid("27518482-c670-42b1-b954-b28336b7ba12"),
                            Value = "cldjisfhlbgv"
                        },
                        new
                        {
                            Id = new Guid("487f577e-eca6-4fb2-b475-7fef97e2be8c"),
                            Value = "xfjrnzeeccy"
                        },
                        new
                        {
                            Id = new Guid("ad6e451e-7ca2-4af5-87e3-c7a114b2adf9"),
                            Value = "iwzglutbgcxvrd"
                        },
                        new
                        {
                            Id = new Guid("f3cda531-f508-4771-a3b2-0b90c75c3465"),
                            Value = "tolzlahtgn"
                        },
                        new
                        {
                            Id = new Guid("ede3039c-dbcc-48f5-ac93-894cb01cc0d1"),
                            Value = "vwjumeskkgkj"
                        },
                        new
                        {
                            Id = new Guid("2c57ff9b-74c6-422c-a6eb-a2b244221d92"),
                            Value = "pbkpcwlxypevcdzzvu"
                        },
                        new
                        {
                            Id = new Guid("26ed1e1f-9b37-4855-8822-57481583209a"),
                            Value = "rpyuofvxearoi"
                        },
                        new
                        {
                            Id = new Guid("025dc8a8-aae6-418b-9cc2-3005ff612f42"),
                            Value = "ywinvizvxyw"
                        },
                        new
                        {
                            Id = new Guid("1d3c5462-4707-4968-b268-a7b41fa67bb3"),
                            Value = "qtanfvklsfua"
                        },
                        new
                        {
                            Id = new Guid("e211b6a8-e39a-4d12-995a-b2f0251bd11d"),
                            Value = "wqkxfthjtldxbuz"
                        },
                        new
                        {
                            Id = new Guid("d4ff0b62-002c-4f0d-9270-3039508a417d"),
                            Value = "skrvuzkiwtuxmee"
                        },
                        new
                        {
                            Id = new Guid("c79ea574-d973-4b27-b610-9ad3b6e0e838"),
                            Value = "wnvikgfetuucdqimod"
                        },
                        new
                        {
                            Id = new Guid("0bc6ae98-2012-452f-b054-ac7f762febb3"),
                            Value = "rnedxpwqhqozrsp"
                        },
                        new
                        {
                            Id = new Guid("fac06dc8-6d43-4157-9c1f-79b5618e8551"),
                            Value = "bofkxlejhgdeuhuru"
                        },
                        new
                        {
                            Id = new Guid("e928dfb5-9b02-4fd7-813a-47a5cab33f50"),
                            Value = "gjdxaqgypwofsnh"
                        },
                        new
                        {
                            Id = new Guid("8e09c7c7-da39-4216-abe4-a192bca5b037"),
                            Value = "mldljugrpgor"
                        },
                        new
                        {
                            Id = new Guid("f243fad7-7f82-4830-a02f-5d609608d7ae"),
                            Value = "crjlptelgeuc"
                        },
                        new
                        {
                            Id = new Guid("1f4b42e8-4574-4de8-89aa-6bbbf41056e4"),
                            Value = "yazkuwxeizfaxkgdr"
                        },
                        new
                        {
                            Id = new Guid("64fa355a-7873-412d-ae8a-fcef1e716c12"),
                            Value = "cpqjulnlicnfr"
                        },
                        new
                        {
                            Id = new Guid("3cf4a366-7420-4dcc-ab14-980a01257af2"),
                            Value = "excoxbpahyldwmd"
                        },
                        new
                        {
                            Id = new Guid("bb9278bc-233d-4e63-aa6f-85810c275fc9"),
                            Value = "ykfqqystxtvgj"
                        },
                        new
                        {
                            Id = new Guid("82d2d743-54f1-4e74-bb89-10537834af2f"),
                            Value = "bfykwqjdyhocjif"
                        },
                        new
                        {
                            Id = new Guid("938aa792-4ce7-4134-9970-6115083279e3"),
                            Value = "vtvhwehsgla"
                        },
                        new
                        {
                            Id = new Guid("b7d3f529-0c9e-42bb-b25f-18f3966614c1"),
                            Value = "olhjxircvmcgia"
                        },
                        new
                        {
                            Id = new Guid("45c7c03e-6771-424a-83e0-23b32b3b6a18"),
                            Value = "txnqvlkhltkpqeq"
                        },
                        new
                        {
                            Id = new Guid("0b67c0d1-a4d9-4e4c-b5eb-f45a13373447"),
                            Value = "obqakxrydvrwdj"
                        },
                        new
                        {
                            Id = new Guid("5ecc17ad-097e-404a-a180-759d2375a6d4"),
                            Value = "atjecowtplv"
                        },
                        new
                        {
                            Id = new Guid("abd52693-baf6-4e1a-8363-def891121d65"),
                            Value = "vymabeokei"
                        },
                        new
                        {
                            Id = new Guid("3fdf7d78-8abf-4239-a232-06891df53cfc"),
                            Value = "gudoyedfqrknz"
                        },
                        new
                        {
                            Id = new Guid("ef5cb640-a28f-49ad-be30-c260b7375e6d"),
                            Value = "egmlwitvlkgxbytcyjrrs"
                        },
                        new
                        {
                            Id = new Guid("0ad4c567-9535-4d07-a6b7-df36a41b1c06"),
                            Value = "gjpksuzsvnx"
                        },
                        new
                        {
                            Id = new Guid("84c34724-af7f-4ff7-a5c2-03cb11496c1d"),
                            Value = "kcliswgsjyknesw"
                        },
                        new
                        {
                            Id = new Guid("93182ac5-9f3a-4354-8d99-2eb4cd7daf28"),
                            Value = "lxupdcezdtlsgsm"
                        },
                        new
                        {
                            Id = new Guid("95f84a7d-6eae-484e-866a-684c6ae20df6"),
                            Value = "qjotvkzchntz"
                        },
                        new
                        {
                            Id = new Guid("3183d7b7-acbb-45e8-b181-b9dcc2cbf8d8"),
                            Value = "ksvmynrcel"
                        },
                        new
                        {
                            Id = new Guid("3101ea98-05a0-4b01-8ede-337c0edbdc90"),
                            Value = "tekysozkvxw"
                        },
                        new
                        {
                            Id = new Guid("5cae8869-edac-4120-9ac9-b5444927e1cb"),
                            Value = "pqkpnhfufizpiiwc"
                        },
                        new
                        {
                            Id = new Guid("ee368ec6-87dc-4b2d-aebf-423e5263d98a"),
                            Value = "xuxjhcmmqjtqytgz"
                        },
                        new
                        {
                            Id = new Guid("6d299ef1-245a-496d-963f-2dd35c9f5465"),
                            Value = "xzpadxzmhvu"
                        },
                        new
                        {
                            Id = new Guid("aeb60c0c-2d48-4f4d-adda-2d2816b7cbd3"),
                            Value = "ywuwbtwajpdload"
                        },
                        new
                        {
                            Id = new Guid("8cdd6100-6b63-4d4e-b624-99bbda13c75d"),
                            Value = "ehdvlujgjfijgyoyxoo"
                        },
                        new
                        {
                            Id = new Guid("02807856-99f5-4db8-b193-906d4793f0e6"),
                            Value = "hejvrprrzktxazpn"
                        },
                        new
                        {
                            Id = new Guid("fe062653-5816-4aed-aca3-372ee66aec27"),
                            Value = "jycoipuxvfrmn"
                        },
                        new
                        {
                            Id = new Guid("c77c9a71-5bf7-48c1-aedd-751bdfd66796"),
                            Value = "kmvvzunkosb"
                        },
                        new
                        {
                            Id = new Guid("46fd3cd2-fd8b-477b-a79d-64827f1e5677"),
                            Value = "tifmryngkzm"
                        },
                        new
                        {
                            Id = new Guid("c27d050c-f7cd-4115-b491-ec53c6a4acc0"),
                            Value = "sgxuzdwqblysnog"
                        },
                        new
                        {
                            Id = new Guid("e7271991-a50e-423f-8826-e6bd2c0a5d48"),
                            Value = "hmomzbvdhjl"
                        },
                        new
                        {
                            Id = new Guid("f80bfa29-7bf7-4553-a235-ec40d763d37e"),
                            Value = "sqfuqebxryfomxofgtyge"
                        },
                        new
                        {
                            Id = new Guid("40882dd5-7127-433b-aa18-bddb611b7641"),
                            Value = "coarhnwuvnslil"
                        },
                        new
                        {
                            Id = new Guid("4c02bd92-346f-4948-89ca-c1f59ad65228"),
                            Value = "jhlfiwggywrgll"
                        },
                        new
                        {
                            Id = new Guid("82308b92-1e94-4bf6-86b1-8de70e18ce52"),
                            Value = "tznmydyvbtxuayqs"
                        },
                        new
                        {
                            Id = new Guid("a43d9ab7-2ebf-48c3-bd00-a99e5e68253c"),
                            Value = "zmkzmlpxagz"
                        },
                        new
                        {
                            Id = new Guid("ecfe4fc9-eace-449e-ab30-3cfc66998a06"),
                            Value = "pmzpsoztsmjvu"
                        },
                        new
                        {
                            Id = new Guid("73954f12-e565-4ac1-8494-03e13f332fed"),
                            Value = "pladmszkqtbuxr"
                        },
                        new
                        {
                            Id = new Guid("954d31ac-ca1b-4ae6-a51a-2c38d51bf3e3"),
                            Value = "pgmrubmrvoql"
                        },
                        new
                        {
                            Id = new Guid("e21a2fc4-2544-41c6-871e-16d708e6ee49"),
                            Value = "fdkgpxawkldb"
                        },
                        new
                        {
                            Id = new Guid("84601cc1-8efc-496d-91ad-2caab13cac35"),
                            Value = "cdqpwsjcsjoafjiq"
                        },
                        new
                        {
                            Id = new Guid("8835d599-1364-40de-a96d-4054d84b431e"),
                            Value = "jmamgfglxrihll"
                        },
                        new
                        {
                            Id = new Guid("93177a01-202d-4469-993c-9fb1c8f0d624"),
                            Value = "wplbqymrneqook"
                        },
                        new
                        {
                            Id = new Guid("9f39611f-3098-49e8-b327-6738ffaf0e8b"),
                            Value = "snsgsbtsurfxelqsz"
                        },
                        new
                        {
                            Id = new Guid("326650da-51ad-4444-a2ae-9b4d68920ebb"),
                            Value = "omyeemefwluhtyw"
                        },
                        new
                        {
                            Id = new Guid("9048085b-f912-41cd-904e-d150d5f64583"),
                            Value = "khjceddblcwwi"
                        },
                        new
                        {
                            Id = new Guid("c26bfc52-b52c-49e6-ae7f-662768302fe7"),
                            Value = "amxrhsmaglosngxdg"
                        },
                        new
                        {
                            Id = new Guid("a0814bb1-2a96-41e8-9f03-bc2765a63f25"),
                            Value = "tvrpjpbgnaizdb"
                        },
                        new
                        {
                            Id = new Guid("9a12f8ff-05ac-4cfa-ae27-8def80cd8991"),
                            Value = "tpsolqxteuczjmd"
                        },
                        new
                        {
                            Id = new Guid("1f5add36-c2bd-4862-9140-6421591a29f4"),
                            Value = "lfwepfcsytqodj"
                        },
                        new
                        {
                            Id = new Guid("990b1c88-404e-4ae0-a4eb-120478a67110"),
                            Value = "uhxpsxxxnwindetzd"
                        },
                        new
                        {
                            Id = new Guid("6ec5fa33-7a67-449c-8b4e-1c2af1faae36"),
                            Value = "xsfsizcnbkgxr"
                        },
                        new
                        {
                            Id = new Guid("4278c254-a59a-429d-a74b-ec6897cdc1d2"),
                            Value = "yywkzrnhnnfveqq"
                        },
                        new
                        {
                            Id = new Guid("0364cbad-7f38-417a-81de-c7d72898b517"),
                            Value = "nkzqdqwvbccxta"
                        },
                        new
                        {
                            Id = new Guid("10282966-beb0-465c-a2d9-e8bbc2c0880d"),
                            Value = "ykilxubkrouorjxopffn"
                        },
                        new
                        {
                            Id = new Guid("4f65e3a5-a8b4-453a-b8d6-49513e5415bc"),
                            Value = "urmuxlsiwyexje"
                        },
                        new
                        {
                            Id = new Guid("53ac8ed5-7150-4561-a9ba-e9834c618270"),
                            Value = "jlzlfityynoilo"
                        },
                        new
                        {
                            Id = new Guid("e8ef7467-4919-4d50-b66d-7d89c6cc7641"),
                            Value = "xwzzckkbfgplh"
                        },
                        new
                        {
                            Id = new Guid("7f3ef187-ee6d-4914-86ae-8491fcedbb7f"),
                            Value = "txlyaykedzszuhmg"
                        },
                        new
                        {
                            Id = new Guid("53467797-9c09-4213-b534-6ecc9fc28232"),
                            Value = "oczrieqypnwnrdph"
                        },
                        new
                        {
                            Id = new Guid("10d06caf-0f44-4183-a71e-d9fc8330f593"),
                            Value = "vuqeqfylxlz"
                        },
                        new
                        {
                            Id = new Guid("dbd4c495-d56a-402c-94fb-98f0ff145cd4"),
                            Value = "rnuwurzkebxcuoxnscc"
                        },
                        new
                        {
                            Id = new Guid("9602e5a9-459f-4a67-afa6-76884d295353"),
                            Value = "nwxjeykwjucfyb"
                        },
                        new
                        {
                            Id = new Guid("c846bd8c-503a-4f8c-865b-4d205b5e08be"),
                            Value = "bwxmxmfeoresyhfl"
                        },
                        new
                        {
                            Id = new Guid("71bcb7ad-6acc-4f5b-a069-48394ffacb2f"),
                            Value = "bygkjyturighn"
                        },
                        new
                        {
                            Id = new Guid("07c7baa7-89c7-4e11-b3b7-fc2b855a36a6"),
                            Value = "fvtfhwqlialoc"
                        },
                        new
                        {
                            Id = new Guid("ef02af59-a311-420c-9641-21735f3d440b"),
                            Value = "zvowmaasucckcx"
                        });
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.FileInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MessageFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MimeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("FileInformations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            MimeType = "image/jpeg",
                            Name = "00000000-0000-0000-0000-000000000000.jpg",
                            SendDate = new DateTime(2020, 12, 25, 21, 8, 40, 230, DateTimeKind.Local).AddTicks(1788),
                            Size = 0L
                        });
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Invitation", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InvitedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InviterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId", "InvitedUserId", "InviterId");

                    b.HasIndex("InvitedUserId");

                    b.HasIndex("InviterId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Ip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsInBan")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ips");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.MessageFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FileInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PreviousName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FileInformationId")
                        .IsUnique();

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("MessageFiles");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserCountry", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "CountryId");

                    b.HasIndex("CountryId");

                    b.ToTable("UserCountries");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserGroup", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCreator")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLeaved")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserIp", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IpId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "IpId");

                    b.HasIndex("IpId");

                    b.ToTable("UserIps");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Application", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Applications")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.FileInformation", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("ImageInformations")
                        .HasForeignKey("GroupId");

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("AvatarInformations")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Invitation", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Invitations")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "InvitedUser")
                        .WithMany("InvitationsForMe")
                        .HasForeignKey("InvitedUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "Inviter")
                        .WithMany("InvitationsFromMe")
                        .HasForeignKey("InviterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Message", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Messages")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.MessageFile", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.FileInformation", "FileInformation")
                        .WithOne("MessageFile")
                        .HasForeignKey("SuperMessenger.Models.EntityFramework.MessageFile", "FileInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("MessageFiles")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("MessageFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserCountry", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Country", "Country")
                        .WithMany("UserCountries")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserCountries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserGroup", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserIp", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Ip", "Ip")
                        .WithMany("UserIps")
                        .HasForeignKey("IpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserIps")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
