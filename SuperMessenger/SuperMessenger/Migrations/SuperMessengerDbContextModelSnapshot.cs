// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperMessenger.Data;

namespace SuperMessenger.Migrations
{
    [DbContext(typeof(SuperMessengerDbContext))]
    partial class SuperMessengerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Application", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsInBan")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Connection", b =>
                {
                    b.Property<string>("ConnectionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsConnected")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ConnectionId");

                    b.HasIndex("UserId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2c123cb5-206f-4bae-87bd-27eaaeab03f5"),
                            Value = "bjbybuzqzwgztw"
                        },
                        new
                        {
                            Id = new Guid("44f16ccb-1906-4990-be9e-c1f74f805438"),
                            Value = "thdifefaqswm"
                        },
                        new
                        {
                            Id = new Guid("57b24a19-190d-4d86-bf6a-52a2387fa35c"),
                            Value = "giaevxjkwxy"
                        },
                        new
                        {
                            Id = new Guid("469f200e-c0d9-4476-a2bb-8eeda44a7a98"),
                            Value = "zdeimcldjdigwf"
                        },
                        new
                        {
                            Id = new Guid("7da40091-5383-4b2a-9655-c05ffed83aac"),
                            Value = "opskdeyizhpspwv"
                        },
                        new
                        {
                            Id = new Guid("85e3100a-08a5-4dd2-907c-2505e2ca5d6c"),
                            Value = "kuuqrhzxrajhaveb"
                        },
                        new
                        {
                            Id = new Guid("eed85e93-eaf3-42b8-806f-05a85b598768"),
                            Value = "dfnteyivdkjmuczeg"
                        },
                        new
                        {
                            Id = new Guid("5ac0ff4b-d4e9-4b1c-b7b4-5c4e220c3b89"),
                            Value = "fgjnirzyigqfqcpg"
                        },
                        new
                        {
                            Id = new Guid("5d91e2bb-622f-45d4-bc65-8a07284daa1f"),
                            Value = "wabniqeqoc"
                        },
                        new
                        {
                            Id = new Guid("90807d44-287c-4ccf-aab3-1ece982b3d9a"),
                            Value = "gmmfpcskdpsdfjh"
                        },
                        new
                        {
                            Id = new Guid("4fe0aa7d-b3bd-4b3a-a75d-a40f0d6890d5"),
                            Value = "egszdsimadoh"
                        },
                        new
                        {
                            Id = new Guid("27986516-3efc-492a-8a75-fff8fc0e24db"),
                            Value = "trovgpmktk"
                        },
                        new
                        {
                            Id = new Guid("2114b35e-5ebf-452e-b740-eba077765c47"),
                            Value = "vsjebtrqnof"
                        },
                        new
                        {
                            Id = new Guid("dc7c5fde-0871-45a9-a61a-bb111d891f1e"),
                            Value = "xntvxlxbozggsv"
                        },
                        new
                        {
                            Id = new Guid("cf4ff42d-b3d6-4116-a77f-992f27b71452"),
                            Value = "vijyqhpfajk"
                        },
                        new
                        {
                            Id = new Guid("278b4640-387b-4d79-81bb-14545aaf6410"),
                            Value = "gjuvmfwedjgza"
                        },
                        new
                        {
                            Id = new Guid("7c2c5403-bb5d-4e05-84fd-e3c3ddc22306"),
                            Value = "rllyxselptdfj"
                        },
                        new
                        {
                            Id = new Guid("a0202ddb-8804-4744-b0ca-3c2f869aa747"),
                            Value = "zwbbywhanycwgrvfkya"
                        },
                        new
                        {
                            Id = new Guid("48959c64-ba97-4850-90d1-78aced63f20f"),
                            Value = "kquplpuwemu"
                        },
                        new
                        {
                            Id = new Guid("0e657b09-e6a9-4317-ba69-6648a28f5524"),
                            Value = "jvjzfuahrvkcxsuuih"
                        },
                        new
                        {
                            Id = new Guid("d51badb6-e5cb-4517-a197-a9710c20cfcd"),
                            Value = "fxolyoquvdjvfry"
                        },
                        new
                        {
                            Id = new Guid("f2a0deba-d70a-48b7-9234-0c351ac32d8c"),
                            Value = "dckuvkswtwlgobvz"
                        },
                        new
                        {
                            Id = new Guid("52c0f52e-831c-4c4c-adb4-8e96f266e19d"),
                            Value = "jxjbhkrsplsznan"
                        },
                        new
                        {
                            Id = new Guid("f2b0d140-22bb-4943-9526-0ada5970ef0c"),
                            Value = "rfspplvqgyua"
                        },
                        new
                        {
                            Id = new Guid("ebe2673f-a89d-4e76-8fae-0d12b5d9f3d9"),
                            Value = "lajnfpvjogvvzovd"
                        },
                        new
                        {
                            Id = new Guid("4b6d35b9-35a4-45c2-9ee8-e87bbd5b6fc6"),
                            Value = "ytxpydmhfruhdqzwh"
                        },
                        new
                        {
                            Id = new Guid("bd3fb0ba-1d17-4114-aa08-8d76c8ce9bfc"),
                            Value = "tkqjmwhydnjjkynnfn"
                        },
                        new
                        {
                            Id = new Guid("b5938fc1-55c9-4658-8916-bd97a0841609"),
                            Value = "odsrzkudvuzakr"
                        },
                        new
                        {
                            Id = new Guid("d9449dd2-dc98-4905-a9a5-d76eae31acf1"),
                            Value = "hswkzeehycybth"
                        },
                        new
                        {
                            Id = new Guid("acd01ded-1f49-420d-bf68-7757e280df1f"),
                            Value = "acdpbdkwnvdpv"
                        },
                        new
                        {
                            Id = new Guid("9b902fd0-94f1-4c9f-93e5-5822d8eb4c56"),
                            Value = "rehxhgtwvrodbionyyxv"
                        },
                        new
                        {
                            Id = new Guid("7780f43d-80f9-4a02-97fc-d33dbadbba33"),
                            Value = "wntbpqrnyv"
                        },
                        new
                        {
                            Id = new Guid("0edaca5a-502b-46c3-8dd6-217581dd19c9"),
                            Value = "koctzebpzjbalmxxil"
                        },
                        new
                        {
                            Id = new Guid("8413b47c-2c13-4030-8fc1-ffbb67a944b5"),
                            Value = "qddvwperumrvia"
                        },
                        new
                        {
                            Id = new Guid("1041776e-097d-4750-8e6d-99ca5ac50902"),
                            Value = "zhrryhlrnynjnlrwv"
                        },
                        new
                        {
                            Id = new Guid("5c525231-9c5d-42f4-9114-71f7f996ddcd"),
                            Value = "mjqfqjopoumi"
                        },
                        new
                        {
                            Id = new Guid("fb5b8df7-e93b-477a-9241-da2987244e59"),
                            Value = "wobjtoegsuap"
                        },
                        new
                        {
                            Id = new Guid("24fba5ce-7075-42dc-aa18-1928a7b626f9"),
                            Value = "ibjzdcwmczrtibwz"
                        },
                        new
                        {
                            Id = new Guid("b64e1d3f-79b2-45fa-a786-d98135fea95b"),
                            Value = "uemnuoqeebaznpltu"
                        },
                        new
                        {
                            Id = new Guid("cead64b0-fa68-49e1-8daf-ccd9f0055e95"),
                            Value = "vslmhjyglsikew"
                        },
                        new
                        {
                            Id = new Guid("707a4b3a-a5cd-4256-ac2a-4719ec1285c7"),
                            Value = "hkuahcqoptuv"
                        },
                        new
                        {
                            Id = new Guid("1a0157ea-6661-40b5-bd6f-3ee287550689"),
                            Value = "twlqolhofixcrb"
                        },
                        new
                        {
                            Id = new Guid("05452cfc-c70e-40ed-bfa3-cb0c60b814dc"),
                            Value = "nyrgoxerdozfmba"
                        },
                        new
                        {
                            Id = new Guid("01b83bcb-095d-4cd0-82da-7b75f3d4cf71"),
                            Value = "qkarcbgdptgwzlvg"
                        },
                        new
                        {
                            Id = new Guid("ed091c49-ae8a-4ff3-9d1b-8b078364e3cb"),
                            Value = "aybqtyybcprdm"
                        },
                        new
                        {
                            Id = new Guid("e75b1a92-9db6-4dd5-83a9-f10114ca35c3"),
                            Value = "btahezubba"
                        },
                        new
                        {
                            Id = new Guid("3c74ce75-4746-4adc-9924-1c8acd2b8953"),
                            Value = "jtrrdhjrjare"
                        },
                        new
                        {
                            Id = new Guid("d8402c78-6524-43d2-8e55-1056289aad6c"),
                            Value = "uqbllhnawwnonak"
                        },
                        new
                        {
                            Id = new Guid("166b328b-5961-4015-b089-d043e5b62ea7"),
                            Value = "irthpawznbvjkfjmi"
                        },
                        new
                        {
                            Id = new Guid("659104ac-1800-41f1-b9f6-b2b3ae77b78f"),
                            Value = "imozxnawyiaherxkrqam"
                        },
                        new
                        {
                            Id = new Guid("456eb339-c8f8-4504-8ccb-f00c35568bc0"),
                            Value = "axxbehobasin"
                        },
                        new
                        {
                            Id = new Guid("44326c23-2ae7-485c-84bd-fbafb9352ba7"),
                            Value = "zxmwuuppdvqnj"
                        },
                        new
                        {
                            Id = new Guid("9de9177f-2375-4daf-a439-850360cd314d"),
                            Value = "unzzqqiwxfw"
                        },
                        new
                        {
                            Id = new Guid("955b6f02-9277-44fb-ab1e-43c7c0d63907"),
                            Value = "eshbnovkpimarkg"
                        },
                        new
                        {
                            Id = new Guid("f5a7507d-f0d8-4bcc-b777-ebffcb90d60d"),
                            Value = "uzyubvgjmmudrenl"
                        },
                        new
                        {
                            Id = new Guid("43f234e8-c4ca-4685-bedc-c1713eb9bc0b"),
                            Value = "vjxoyjkutenheh"
                        },
                        new
                        {
                            Id = new Guid("e2411b55-4060-42d5-8b10-5a9f946c427e"),
                            Value = "eeszezugexbnhavf"
                        },
                        new
                        {
                            Id = new Guid("fb7af65d-d91c-483f-bf9d-35ea98f0babd"),
                            Value = "krvihjvzulsl"
                        },
                        new
                        {
                            Id = new Guid("f5f585e4-83db-45be-b68c-7e4bcf1a445e"),
                            Value = "nkejncnoodcd"
                        },
                        new
                        {
                            Id = new Guid("22cd85c6-6634-4132-9067-aaa27e0396df"),
                            Value = "atshiwjcjimqw"
                        },
                        new
                        {
                            Id = new Guid("96a9072c-f921-49e5-88e1-2080df1ddc9e"),
                            Value = "iurzvajzaqr"
                        },
                        new
                        {
                            Id = new Guid("d7911d80-349c-4fcd-a215-b7387872602e"),
                            Value = "tvzbykrgoylnbcf"
                        },
                        new
                        {
                            Id = new Guid("d7cebe92-e5bf-41ba-a66c-2496cd10eeb7"),
                            Value = "ztxflsgurnvtkx"
                        },
                        new
                        {
                            Id = new Guid("4bad1d8d-1669-470f-b445-f58e7049a420"),
                            Value = "qrpslijnfydve"
                        },
                        new
                        {
                            Id = new Guid("08582a13-16ef-4fa3-a5f9-999ca032a9ce"),
                            Value = "oqzmikokkrgajvgzm"
                        },
                        new
                        {
                            Id = new Guid("5baa4cdb-204a-448c-a14c-15f1e3651738"),
                            Value = "xchsrqeelr"
                        },
                        new
                        {
                            Id = new Guid("651e01a6-4cca-49ec-9a19-9a085da11a3f"),
                            Value = "zxhobeykwpakoq"
                        },
                        new
                        {
                            Id = new Guid("56e063f1-b496-4a0d-8780-3537eda5df22"),
                            Value = "nuvjhulyzgcc"
                        },
                        new
                        {
                            Id = new Guid("eb13ad00-40c4-4322-a5d9-e3acdbb7911a"),
                            Value = "hbllovgodkkuikg"
                        },
                        new
                        {
                            Id = new Guid("6f89bb5b-0091-4ed7-8e66-24fe8c336858"),
                            Value = "ysibkrcbdtzg"
                        },
                        new
                        {
                            Id = new Guid("fe08a517-6a05-4fdf-9c77-ee83fe631d00"),
                            Value = "vvffoqpstmsjwscgqnge"
                        },
                        new
                        {
                            Id = new Guid("2aad8539-d85c-408b-8dd6-df2990d2a717"),
                            Value = "kffnyrjdoxsoeuztf"
                        },
                        new
                        {
                            Id = new Guid("07ce6e3e-00db-410b-a557-430763bf79ac"),
                            Value = "evulsrunaxaohv"
                        },
                        new
                        {
                            Id = new Guid("bb31bd4b-0c23-44ee-9e0a-6591b79a6b31"),
                            Value = "mosbhefbqidoofpbj"
                        },
                        new
                        {
                            Id = new Guid("d14fb354-e265-4dfa-812d-497f387c1de2"),
                            Value = "tfjydlcssptgkm"
                        },
                        new
                        {
                            Id = new Guid("4b58d3f6-1d68-4649-a7a6-1e0e9b041481"),
                            Value = "bxpjxbbonbswbmspucnn"
                        },
                        new
                        {
                            Id = new Guid("30e284e7-5a5a-42e7-abe0-c768c4b2ab2e"),
                            Value = "gotwjsfsecnfchoyvli"
                        },
                        new
                        {
                            Id = new Guid("4e1b8b8d-8f5d-4bb9-9c96-f9d385e09959"),
                            Value = "vdwopcmlpfjntdrdzg"
                        },
                        new
                        {
                            Id = new Guid("92061224-64fc-495f-9ff6-701d8c05ff51"),
                            Value = "hlvyfetyslzyyvmq"
                        },
                        new
                        {
                            Id = new Guid("68360df4-ad82-4bf5-b6b5-f0be18fb6ebc"),
                            Value = "lhysrlfwmxdsrxsvz"
                        },
                        new
                        {
                            Id = new Guid("c8e2ca41-e4e2-492c-b1f5-63e793215d01"),
                            Value = "pikmbuabcjbx"
                        },
                        new
                        {
                            Id = new Guid("52dc9970-4a49-4104-8038-0191819e2653"),
                            Value = "pxszpmnccwwxzcc"
                        },
                        new
                        {
                            Id = new Guid("4fe33da3-b6d2-4cba-a99b-cd5fe6764555"),
                            Value = "ukxpyrqvhly"
                        },
                        new
                        {
                            Id = new Guid("56ea6d6d-173b-4e3f-86e1-6dc888b54802"),
                            Value = "mysmzhyqbhbmb"
                        },
                        new
                        {
                            Id = new Guid("1a93c55f-2a0a-4b4a-b3a0-a56b5f226b42"),
                            Value = "vqbbdijmcwmbmc"
                        },
                        new
                        {
                            Id = new Guid("06654387-9e63-44b9-a16c-725e0b2ce11e"),
                            Value = "ffvyzyefommxhehlyx"
                        },
                        new
                        {
                            Id = new Guid("e880e54f-76fc-4685-be3f-ad5f8ca30131"),
                            Value = "kukdzcptnwbeq"
                        },
                        new
                        {
                            Id = new Guid("0f6026de-8c92-4b7f-b933-58d6257e7774"),
                            Value = "uzprjbgfjmyaw"
                        },
                        new
                        {
                            Id = new Guid("604be7c4-8cc7-498b-bc7c-87e1198da527"),
                            Value = "akxaruytzsyxk"
                        },
                        new
                        {
                            Id = new Guid("5508815f-2409-4247-9b15-b4b249befd43"),
                            Value = "egqjajtmhoth"
                        },
                        new
                        {
                            Id = new Guid("f028ba97-d110-499f-91e4-18e9cd64cb64"),
                            Value = "dpgxyflzglhjifqyfm"
                        },
                        new
                        {
                            Id = new Guid("661b904c-132b-4147-8385-18f1c8e669df"),
                            Value = "milkckzmlddrb"
                        },
                        new
                        {
                            Id = new Guid("baf6dab9-9f09-4ce6-afe1-a04d2167ae1e"),
                            Value = "xgsvzdfftgezyzq"
                        },
                        new
                        {
                            Id = new Guid("32aaf3ec-f119-4eac-acd0-16a22379f9ac"),
                            Value = "klxzsstvdrqllnke"
                        },
                        new
                        {
                            Id = new Guid("ea374f75-f990-4b9c-b0fe-0bd8a3c7a092"),
                            Value = "fmljcmykksfph"
                        },
                        new
                        {
                            Id = new Guid("ca5d84db-33ad-44ec-baeb-c281db3d87d8"),
                            Value = "jhzqqeqdisctbey"
                        },
                        new
                        {
                            Id = new Guid("f4cd1560-d9e7-406d-8be4-b871df8708b5"),
                            Value = "msqrxsuertzofhnyor"
                        },
                        new
                        {
                            Id = new Guid("223579ed-4a50-4ecc-9ade-2a5d60126574"),
                            Value = "hslfjtkqvwgiyoc"
                        },
                        new
                        {
                            Id = new Guid("5bfd0815-fcfc-4a3e-be0e-b65d819e0800"),
                            Value = "oeoqvbjwvlhmn"
                        },
                        new
                        {
                            Id = new Guid("ccf96452-9f70-4f93-8d0c-9f3021041472"),
                            Value = "sfhabedzmyz"
                        });
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.FileInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MessageFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MimeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("FileInformations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            MimeType = "image/jpeg",
                            Name = "00000000-0000-0000-0000-000000000000.jpg",
                            SendDate = new DateTime(2020, 12, 13, 21, 23, 41, 263, DateTimeKind.Local).AddTicks(4232),
                            Size = 0L
                        });
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Invitation", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InvitedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InviterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId", "InvitedUserId", "InviterId");

                    b.HasIndex("InvitedUserId");

                    b.HasIndex("InviterId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Ip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsInBan")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ips");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.MessageFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FileInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PreviousName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FileInformationId")
                        .IsUnique();

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("MessageFiles");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserCountry", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "CountryId");

                    b.HasIndex("CountryId");

                    b.ToTable("UserCountries");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserGroup", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCreator")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLeaved")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserIp", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IpId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "IpId");

                    b.HasIndex("IpId");

                    b.ToTable("UserIps");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Application", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Applications")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Connection", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Connections")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.FileInformation", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("ImageInformations")
                        .HasForeignKey("GroupId");

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("AvatarInformations")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Invitation", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Invitations")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "InvitedUser")
                        .WithMany("InvitationsForMe")
                        .HasForeignKey("InvitedUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "Inviter")
                        .WithMany("InvitationsFromMe")
                        .HasForeignKey("InviterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Message", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Messages")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.MessageFile", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.FileInformation", "FileInformation")
                        .WithOne("MessageFile")
                        .HasForeignKey("SuperMessenger.Models.EntityFramework.MessageFile", "FileInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("MessageFiles")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("MessageFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserCountry", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Country", "Country")
                        .WithMany("UserCountries")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserCountries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserGroup", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserIp", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Ip", "Ip")
                        .WithMany("UserIps")
                        .HasForeignKey("IpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserIps")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
