// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperMessenger.Data;

namespace SuperMessenger.Migrations
{
    [DbContext(typeof(SuperMessengerDbContext))]
    [Migration("20201212140908_ChangeFileInformationId_PreviousName_SentDate")]
    partial class ChangeFileInformationId_PreviousName_SentDate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Application", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsInBan")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Connection", b =>
                {
                    b.Property<string>("ConnectionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsConnected")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ConnectionId");

                    b.HasIndex("UserId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d6c943a8-4f04-47e3-8000-6ac96a4918f0"),
                            Value = "boufkqusfxplc"
                        },
                        new
                        {
                            Id = new Guid("be4a80ab-0900-4dec-9cfc-539e842911bf"),
                            Value = "csfmskpykpdeadmb"
                        },
                        new
                        {
                            Id = new Guid("6c80ac09-5d15-48bb-bcc0-8f43c0efb403"),
                            Value = "qugibnnwsullaay"
                        },
                        new
                        {
                            Id = new Guid("b4a7e4e5-b16a-4958-a253-ca700b0c0f3a"),
                            Value = "pebehirwxxvuqdwiv"
                        },
                        new
                        {
                            Id = new Guid("8dc94305-0156-4788-9b67-ba103cd697d0"),
                            Value = "tjnvgxzwsm"
                        },
                        new
                        {
                            Id = new Guid("9b4d7c68-af7f-4d07-a4fd-02c62b1ef8f9"),
                            Value = "hhziyhtdmftfx"
                        },
                        new
                        {
                            Id = new Guid("2ad38540-87f1-4399-a1b4-9dd6c0f78d0b"),
                            Value = "zqionkcqehbopatovjhy"
                        },
                        new
                        {
                            Id = new Guid("312e2225-3da6-4b48-b2bd-e8701008cb8a"),
                            Value = "pmxmfdyfkbzxxc"
                        },
                        new
                        {
                            Id = new Guid("3e98d658-5910-4788-8f3b-18be670323f8"),
                            Value = "aradeelownuwhwz"
                        },
                        new
                        {
                            Id = new Guid("63248d7f-7134-46e8-a254-2969fa28fd34"),
                            Value = "zbnszsaofb"
                        },
                        new
                        {
                            Id = new Guid("edbf4957-0bde-4bf1-beb6-8f564d44fc4c"),
                            Value = "phrppbnehaaa"
                        },
                        new
                        {
                            Id = new Guid("d9c579ec-b61f-4b30-ada3-0007f7718762"),
                            Value = "vsrxkicqbrgrdh"
                        },
                        new
                        {
                            Id = new Guid("80081d41-775c-4233-a5c1-ed01b3741be8"),
                            Value = "uzltecxtqfaelhjt"
                        },
                        new
                        {
                            Id = new Guid("10393d2c-84f5-4f57-bbbf-39e28e94089c"),
                            Value = "gjpzgmnknssvpakq"
                        },
                        new
                        {
                            Id = new Guid("f778350e-61ca-4849-9fde-b443ec62feb7"),
                            Value = "hlmnlbucka"
                        },
                        new
                        {
                            Id = new Guid("b31b0b54-760c-4a27-93d2-04bf8c5567d6"),
                            Value = "dvuqmgosnmvbeursd"
                        },
                        new
                        {
                            Id = new Guid("88ae4c1c-a36a-40d2-afd2-2f7ee9070792"),
                            Value = "gxeucksxtwwbz"
                        },
                        new
                        {
                            Id = new Guid("c099c37f-da8d-4275-9155-caa5e156a9a3"),
                            Value = "uaebijihyoocavxob"
                        },
                        new
                        {
                            Id = new Guid("8e0308b4-937e-4c3e-9df0-471dd5b7aa6f"),
                            Value = "meryggdjnaabxut"
                        },
                        new
                        {
                            Id = new Guid("0beef505-b802-4307-a6ee-9d4b749ef7dc"),
                            Value = "gaxokdntsl"
                        },
                        new
                        {
                            Id = new Guid("1558b41d-5270-497c-b89a-992f76f586ce"),
                            Value = "bzaiwwujtioonw"
                        },
                        new
                        {
                            Id = new Guid("b7cc73f6-7dba-41c5-abfb-0667deb14997"),
                            Value = "chiesgxessnb"
                        },
                        new
                        {
                            Id = new Guid("22119abf-afd4-49a9-85cb-0e46d8fa7137"),
                            Value = "skorxmcvdptbpv"
                        },
                        new
                        {
                            Id = new Guid("417135e2-0ea7-4b8a-8e98-cb42e7ab760b"),
                            Value = "nxauxkaushfxabatnjo"
                        },
                        new
                        {
                            Id = new Guid("45e2ddda-d89a-4f39-880f-d7da79417181"),
                            Value = "vkwmqsfgdlskks"
                        },
                        new
                        {
                            Id = new Guid("fcc23108-4334-4eb1-b73e-22747c956892"),
                            Value = "qdnvegocpdyj"
                        },
                        new
                        {
                            Id = new Guid("c1529c0b-a492-4221-a46f-5d4889bca478"),
                            Value = "jrumebpcsepdlwtka"
                        },
                        new
                        {
                            Id = new Guid("5968e72c-2351-4083-9316-694a08959318"),
                            Value = "edpcktvwiyejzwofoy"
                        },
                        new
                        {
                            Id = new Guid("723fadba-c1b8-4d80-8546-829d92a36e8e"),
                            Value = "okvgvojqjayzkufi"
                        },
                        new
                        {
                            Id = new Guid("582299d5-8746-4e07-844e-673e0dba2c7b"),
                            Value = "rpekmounlnldn"
                        },
                        new
                        {
                            Id = new Guid("8f25db61-caca-4d1e-8571-9b70db023c4a"),
                            Value = "xnshhpqtgopgff"
                        },
                        new
                        {
                            Id = new Guid("c1752d0d-81a6-4f92-a01c-ff4ba60161bc"),
                            Value = "qziquwmnbhfelq"
                        },
                        new
                        {
                            Id = new Guid("87d62f9b-329d-46ea-9186-3a5aa2eaaaa1"),
                            Value = "egsbbdmpeayxluaxm"
                        },
                        new
                        {
                            Id = new Guid("bad9b6cf-bc5b-448f-aa4b-c11d2cfb93a8"),
                            Value = "wiofoqkghlz"
                        },
                        new
                        {
                            Id = new Guid("648493df-c8e2-47c8-88e1-587a21800733"),
                            Value = "rwpkqvbihetcglf"
                        },
                        new
                        {
                            Id = new Guid("1325fd23-af97-4a9f-b0b5-072cfd00e3d0"),
                            Value = "qhxeqxlvkdcrwn"
                        },
                        new
                        {
                            Id = new Guid("46bab4c9-fbc3-404c-8369-62901da530ea"),
                            Value = "ybxxftdevvo"
                        },
                        new
                        {
                            Id = new Guid("8ad6c300-2525-49de-babd-52c29da5f281"),
                            Value = "bgeufsjljlnzgt"
                        },
                        new
                        {
                            Id = new Guid("01f73bb0-7949-4ef8-8a61-9266c65431eb"),
                            Value = "rhdqjbiyxzcm"
                        },
                        new
                        {
                            Id = new Guid("6acdc0ca-14da-4919-941d-57f8b96d2be1"),
                            Value = "dypzzptwxfvv"
                        },
                        new
                        {
                            Id = new Guid("5cb216f1-ccd1-4cf3-a590-4862578e9485"),
                            Value = "jtacchibpbzo"
                        },
                        new
                        {
                            Id = new Guid("f6b5e5fd-aacc-440f-a092-6cc1a6644acd"),
                            Value = "fgawtyegggcf"
                        },
                        new
                        {
                            Id = new Guid("7bdd7a07-02d5-4a3f-9a2a-9b5d99c401fe"),
                            Value = "ftpdzulbuovjxlnq"
                        },
                        new
                        {
                            Id = new Guid("3cda17c9-b588-4877-b019-00dfc487073a"),
                            Value = "lbgzpdppezauyvv"
                        },
                        new
                        {
                            Id = new Guid("e707fc87-db93-4633-a2b7-a0d025472fee"),
                            Value = "ethilhgixcfn"
                        },
                        new
                        {
                            Id = new Guid("c59f2417-a19f-4091-bcde-aea801869332"),
                            Value = "adizswvfsdhhmyu"
                        },
                        new
                        {
                            Id = new Guid("4bf80c47-0210-486c-aa33-e28c251be396"),
                            Value = "bbkcjtgkondjmnk"
                        },
                        new
                        {
                            Id = new Guid("741da831-f5e9-47ff-bac6-5271cc6064b5"),
                            Value = "slgbrkkadvwtqldcb"
                        },
                        new
                        {
                            Id = new Guid("e580592a-4bac-4ec2-9431-1d3d27628ba4"),
                            Value = "bqibwqcfyxlbagzriy"
                        },
                        new
                        {
                            Id = new Guid("1212c822-3f43-46ba-92a8-11ec1a15e8db"),
                            Value = "xwlqgihesjmaji"
                        },
                        new
                        {
                            Id = new Guid("8b6c76c7-ad6e-419d-a9bc-63dd99b3af89"),
                            Value = "rowbovezujnxo"
                        },
                        new
                        {
                            Id = new Guid("529fd7bf-e268-419d-8ebc-80cb81c7b422"),
                            Value = "mmobtyedphk"
                        },
                        new
                        {
                            Id = new Guid("da1e7d8b-b960-4af4-9eed-c86863ebf45e"),
                            Value = "oykrkgllwedgima"
                        },
                        new
                        {
                            Id = new Guid("fde4287f-b61d-45b3-aaa9-32c5da01c242"),
                            Value = "jgkynupnbhfustajd"
                        },
                        new
                        {
                            Id = new Guid("b10a7cfd-f05d-41f3-8cd5-308235ef6f15"),
                            Value = "deqldghrdvdbnrywm"
                        },
                        new
                        {
                            Id = new Guid("df3e5ebe-50b6-4131-8691-8cb85c29ae67"),
                            Value = "nenpwflefomzuujv"
                        },
                        new
                        {
                            Id = new Guid("5a814540-1281-4867-aad0-b77302d61307"),
                            Value = "kocuztkineiksixjb"
                        },
                        new
                        {
                            Id = new Guid("ca8b339f-00f2-40a6-a656-1bcbd2b848ba"),
                            Value = "ehzfxezyvfmrfvrc"
                        },
                        new
                        {
                            Id = new Guid("7373a202-9670-4c82-81a5-c9f55e44f6da"),
                            Value = "eeoekrnmlzilbapb"
                        },
                        new
                        {
                            Id = new Guid("b35898ed-4aea-4339-94a0-0b18e32220ee"),
                            Value = "fhrmufsqqhkpg"
                        },
                        new
                        {
                            Id = new Guid("dc856cd0-47b5-499f-81b4-544d50d6cff7"),
                            Value = "emlpofhtnxeqqak"
                        },
                        new
                        {
                            Id = new Guid("95c0a623-d046-45bc-abe1-e34c6d9c4891"),
                            Value = "npwmmldkphnuuorbjr"
                        },
                        new
                        {
                            Id = new Guid("d72984bf-5edb-4a18-ab97-105c8a9c7e60"),
                            Value = "gflginuxdfdgo"
                        },
                        new
                        {
                            Id = new Guid("9cbfd412-59f5-4bd3-b905-a88b519f666e"),
                            Value = "astjsaxtcsbtqntlif"
                        },
                        new
                        {
                            Id = new Guid("d1ec6c74-0782-4e8f-a319-c91b8ba98602"),
                            Value = "bbcbxfatgwmhvbnl"
                        },
                        new
                        {
                            Id = new Guid("78e51900-61b7-454a-8236-762e62bf70f7"),
                            Value = "whlaceemrnlfln"
                        },
                        new
                        {
                            Id = new Guid("39a00512-8d41-43c7-8573-080419766472"),
                            Value = "qwvceybbhvxsy"
                        },
                        new
                        {
                            Id = new Guid("fe6a0cbf-3122-4611-9d2a-a299faa74534"),
                            Value = "vflgqloghnukznuythznvlw"
                        },
                        new
                        {
                            Id = new Guid("169af2b0-42b5-4e51-a9f1-4fd13aa9de5a"),
                            Value = "eiisrbtrgmcoi"
                        },
                        new
                        {
                            Id = new Guid("8d5a8e59-bcd7-44a9-8306-9824f5a4782f"),
                            Value = "nshkxyophbmels"
                        },
                        new
                        {
                            Id = new Guid("eec65729-3282-455d-ade5-c30fb9064897"),
                            Value = "dcuzufbftonoi"
                        },
                        new
                        {
                            Id = new Guid("3c6c32f4-753b-41c7-9a62-79f646e0d018"),
                            Value = "teyhqivqfklyl"
                        },
                        new
                        {
                            Id = new Guid("84b2d287-55fa-4e3d-9ad1-c768cb2328bc"),
                            Value = "ogzvnvdylexuksumvsk"
                        },
                        new
                        {
                            Id = new Guid("c2236f0b-a03d-4ce3-a29a-71a2b2e3dfa6"),
                            Value = "dkwpqjgkrwbxy"
                        },
                        new
                        {
                            Id = new Guid("03957203-46c8-4cd2-9486-0acef2adf275"),
                            Value = "lcfbstzrlbdt"
                        },
                        new
                        {
                            Id = new Guid("d1985344-af6b-41b1-90a4-b11efa5a0775"),
                            Value = "nideaqlbhheqxzx"
                        },
                        new
                        {
                            Id = new Guid("763a3df4-bed9-487f-997a-8b3be5e10486"),
                            Value = "xewvnfqmhcrcqysgu"
                        },
                        new
                        {
                            Id = new Guid("f7a50245-8c2a-4aac-85c3-102b2dbb9e35"),
                            Value = "mmkeiwhlxjln"
                        },
                        new
                        {
                            Id = new Guid("1b90e125-7c3f-4810-906b-cbf951800dbf"),
                            Value = "vwifisvlrsxxhas"
                        },
                        new
                        {
                            Id = new Guid("2b43fd65-6e0c-4bea-ac85-d381154dac44"),
                            Value = "ufxgpnkydwfh"
                        },
                        new
                        {
                            Id = new Guid("84e6a710-60b6-47f6-a256-1bb8338a78c7"),
                            Value = "qgjumibftcroimmz"
                        },
                        new
                        {
                            Id = new Guid("7097f02f-bcf3-4ae5-b131-2d7c57460b7a"),
                            Value = "lsbwxtlkjrqc"
                        },
                        new
                        {
                            Id = new Guid("2874f95f-08a5-48b5-9e0b-b869a120d6f9"),
                            Value = "qiozkglwrpsv"
                        },
                        new
                        {
                            Id = new Guid("aa71ac56-3aff-48e1-934f-f9819d93a009"),
                            Value = "choebtvtlkduyrf"
                        },
                        new
                        {
                            Id = new Guid("c59c3645-391a-4911-952a-6b349f2da745"),
                            Value = "rsidsvgsmbvw"
                        },
                        new
                        {
                            Id = new Guid("18b7204b-3137-4ce1-be87-830323383551"),
                            Value = "bbgmrgvcedordr"
                        },
                        new
                        {
                            Id = new Guid("f6dce103-9fe4-47a5-ab83-9aae62bf79c7"),
                            Value = "zkifijnatkyrtmwb"
                        },
                        new
                        {
                            Id = new Guid("7ac35949-1616-4d58-b400-0ae8b29462d5"),
                            Value = "xvleghzzupfirtj"
                        },
                        new
                        {
                            Id = new Guid("7af89cb3-6e9e-4e6f-a153-2111491df23f"),
                            Value = "jawpcbtzoebt"
                        },
                        new
                        {
                            Id = new Guid("d5339e50-232b-48e2-86ed-f87543997234"),
                            Value = "jftnzkklbbhgcg"
                        },
                        new
                        {
                            Id = new Guid("e03af1f9-4904-4b08-a1c0-fa3290579a15"),
                            Value = "vprztuskvkxzzuno"
                        },
                        new
                        {
                            Id = new Guid("4c6873cb-0c9a-4c80-8993-cd2d77949971"),
                            Value = "wbcpvdqucblvxazhp"
                        },
                        new
                        {
                            Id = new Guid("d6bdbea3-4688-4cdf-aaca-4ae34259e922"),
                            Value = "qvkhslcefjpdewzjld"
                        },
                        new
                        {
                            Id = new Guid("8532c8e2-7f2e-4c4f-9d63-39e5618ea93f"),
                            Value = "nzebosjhijxsu"
                        },
                        new
                        {
                            Id = new Guid("5ea83dbc-4476-4a61-860c-03917713408b"),
                            Value = "nxwevrdltrx"
                        },
                        new
                        {
                            Id = new Guid("244d5509-8be4-456c-b7b9-86ffbe168a2b"),
                            Value = "cujyklqpblwvdyw"
                        },
                        new
                        {
                            Id = new Guid("5366247f-7909-4045-a7c6-ab550b3be098"),
                            Value = "ukvnrkioyhkqlp"
                        },
                        new
                        {
                            Id = new Guid("08d7f2dc-3f38-4842-b00e-861e15c625ca"),
                            Value = "adqdwtjojnqum"
                        },
                        new
                        {
                            Id = new Guid("b21f01b7-5cac-41d5-b76b-6ba93562fc6e"),
                            Value = "ujnywzbpkc"
                        },
                        new
                        {
                            Id = new Guid("10ab8a50-cadc-4e10-b9d0-b98e102fd71c"),
                            Value = "ccbgfuhirbdfud"
                        });
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.FileInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MessageFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MimeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("MessageFileId")
                        .IsUnique()
                        .HasFilter("[MessageFileId] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("FileInformations");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Invitation", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InvitedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InviterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId", "InvitedUserId", "InviterId");

                    b.HasIndex("InvitedUserId");

                    b.HasIndex("InviterId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Ip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsInBan")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ips");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.MessageFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FileInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PreviousName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("MessageFiles");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserCountry", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "CountryId");

                    b.HasIndex("CountryId");

                    b.ToTable("UserCountries");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserGroup", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCreator")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLeaved")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserIp", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IpId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "IpId");

                    b.HasIndex("IpId");

                    b.ToTable("UserIps");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Application", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Applications")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Connection", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Connections")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.FileInformation", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("ImageInformations")
                        .HasForeignKey("GroupId");

                    b.HasOne("SuperMessenger.Models.EntityFramework.MessageFile", "MessageFile")
                        .WithOne("FileInformation")
                        .HasForeignKey("SuperMessenger.Models.EntityFramework.FileInformation", "MessageFileId");

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("AvatarInformations")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Invitation", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Invitations")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "InvitedUser")
                        .WithMany("InvitationsForMe")
                        .HasForeignKey("InvitedUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "Inviter")
                        .WithMany("InvitationsFromMe")
                        .HasForeignKey("InviterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Message", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Messages")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.MessageFile", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("MessageFiles")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("MessageFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserCountry", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Country", "Country")
                        .WithMany("UserCountries")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserCountries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserGroup", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserIp", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Ip", "Ip")
                        .WithMany("UserIps")
                        .HasForeignKey("IpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserIps")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
