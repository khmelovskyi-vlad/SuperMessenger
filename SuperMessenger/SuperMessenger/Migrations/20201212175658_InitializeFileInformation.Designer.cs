// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperMessenger.Data;

namespace SuperMessenger.Migrations
{
    [DbContext(typeof(SuperMessengerDbContext))]
    [Migration("20201212175658_InitializeFileInformation")]
    partial class InitializeFileInformation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Application", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsInBan")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Connection", b =>
                {
                    b.Property<string>("ConnectionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsConnected")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ConnectionId");

                    b.HasIndex("UserId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("674807ba-14c2-4f0e-a6d8-f67a3b171d91"),
                            Value = "lehgscrxphwfhx"
                        },
                        new
                        {
                            Id = new Guid("6358af92-e335-4457-b1ad-b415f4aca0ab"),
                            Value = "fzpjvwkithkcc"
                        },
                        new
                        {
                            Id = new Guid("2fd94cb4-fcd0-4124-bc54-5a1d8bdb6516"),
                            Value = "pblejkcrlmnvqf"
                        },
                        new
                        {
                            Id = new Guid("e0972cc2-138f-4f34-8244-b3ce63ebefde"),
                            Value = "wmruouvywiako"
                        },
                        new
                        {
                            Id = new Guid("76067476-40b1-404a-9c17-07e020020d2d"),
                            Value = "mcxcymuaagyekkfw"
                        },
                        new
                        {
                            Id = new Guid("db46f258-7c48-4ca8-9792-75d60587548f"),
                            Value = "cfoemkuvuxjoiar"
                        },
                        new
                        {
                            Id = new Guid("37ea5a00-bdc9-46fb-a03f-ea02c5b289d6"),
                            Value = "buokvyyjijirjv"
                        },
                        new
                        {
                            Id = new Guid("669be484-fb32-415a-b51f-366b4de058de"),
                            Value = "wbtyxgzhgqubwcoug"
                        },
                        new
                        {
                            Id = new Guid("0ec67d77-92a2-49ea-b566-6fe64ccf875d"),
                            Value = "mhkrhaxudeetxdpi"
                        },
                        new
                        {
                            Id = new Guid("923ec13e-bb5d-4f0c-87a0-c5bf62dcb6bb"),
                            Value = "cnmngenkesyyzehuwvh"
                        },
                        new
                        {
                            Id = new Guid("47a22f28-1abf-499d-87ab-35a7d58242c8"),
                            Value = "zgtnbqwbije"
                        },
                        new
                        {
                            Id = new Guid("33945806-9cd0-4567-a895-a515859afbc9"),
                            Value = "vzyjmzkwpxpmfytfylu"
                        },
                        new
                        {
                            Id = new Guid("55c976cb-cbe2-4cda-86e8-1c13e3efd8c7"),
                            Value = "nykwaqnydadw"
                        },
                        new
                        {
                            Id = new Guid("da10a082-76f7-4909-9179-2f3876212dc2"),
                            Value = "uuhkxlnbebdf"
                        },
                        new
                        {
                            Id = new Guid("1c4bdf51-c700-4ffe-aaf3-2fa4ff6d21aa"),
                            Value = "htluokteiwywuyxc"
                        },
                        new
                        {
                            Id = new Guid("4f284b11-9975-41c2-87af-22c7b9fa5e4d"),
                            Value = "arlutmifwcnrumydc"
                        },
                        new
                        {
                            Id = new Guid("620214f2-6c69-48dd-8ded-dca2645eb499"),
                            Value = "tqduqioypyaxf"
                        },
                        new
                        {
                            Id = new Guid("c20592a6-0a57-4df5-8afd-2825d4611f18"),
                            Value = "swoqkyhukty"
                        },
                        new
                        {
                            Id = new Guid("b3e42672-056b-4b10-a098-90a032560fe9"),
                            Value = "oesprxjkjfuangjc"
                        },
                        new
                        {
                            Id = new Guid("3749f51b-2681-4522-9ae1-ff0ec5f24c42"),
                            Value = "wmdbmwrhrzlxom"
                        },
                        new
                        {
                            Id = new Guid("80a4652c-c256-48be-b3e7-b4bb58b5f9fc"),
                            Value = "kzilkatkgvmb"
                        },
                        new
                        {
                            Id = new Guid("dabcb0b6-f560-4517-8b32-6e584cf35638"),
                            Value = "glvlraqwbdovjofs"
                        },
                        new
                        {
                            Id = new Guid("95afe103-537b-45bd-93fc-70d4a57615e9"),
                            Value = "hvzohggndkeoyn"
                        },
                        new
                        {
                            Id = new Guid("3c70065f-0608-41a9-bfa6-8d51a977e5ae"),
                            Value = "rjaguskrdr"
                        },
                        new
                        {
                            Id = new Guid("caf7d6e3-f846-479d-8776-e246563a418f"),
                            Value = "chrncbvzmgwiipinb"
                        },
                        new
                        {
                            Id = new Guid("cd26e2ba-4518-46c9-b862-6b9f8404d5b9"),
                            Value = "wpydtdrqwttoxrifu"
                        },
                        new
                        {
                            Id = new Guid("fcdab5cc-5342-4f20-b001-158ea2644795"),
                            Value = "wwoqbfedkeard"
                        },
                        new
                        {
                            Id = new Guid("d7a10649-e4b0-465c-9d49-9aba188b809c"),
                            Value = "jluptdcgsxxebe"
                        },
                        new
                        {
                            Id = new Guid("87cf713c-79c4-4513-b461-f058903b29ee"),
                            Value = "fefrlgxrcszspeqfmozxpg"
                        },
                        new
                        {
                            Id = new Guid("c231bfbf-156e-40a5-a398-55160a5b18e5"),
                            Value = "wuonifyoxtumci"
                        },
                        new
                        {
                            Id = new Guid("f0dd5f34-3832-44e8-b42b-be9d06e8a9d2"),
                            Value = "dtqqgsabvwuxcuzgie"
                        },
                        new
                        {
                            Id = new Guid("d9eedd5c-adde-4fd1-9331-d9f8cff65993"),
                            Value = "heswnymgxlgudvbluos"
                        },
                        new
                        {
                            Id = new Guid("93763b87-cc6b-4f6c-bc90-7a811d9c8b86"),
                            Value = "bkbbdfmayfha"
                        },
                        new
                        {
                            Id = new Guid("f36b01e9-9db6-4983-92bd-29abd4eb16bc"),
                            Value = "irtsafudywyfrepgkskj"
                        },
                        new
                        {
                            Id = new Guid("1d03f10d-01de-45e2-9bbc-88245445cb31"),
                            Value = "xjivrcfkxdff"
                        },
                        new
                        {
                            Id = new Guid("95c296e1-0e4b-45e9-b98c-fe3cf41fed86"),
                            Value = "masiilylkmwebx"
                        },
                        new
                        {
                            Id = new Guid("34ee2d28-c6e9-41c1-8cd0-d8242095b7ff"),
                            Value = "hhpuvfreypazyh"
                        },
                        new
                        {
                            Id = new Guid("4bc177b7-d5ac-420f-8906-c9efe6df4b9d"),
                            Value = "fflzoloylh"
                        },
                        new
                        {
                            Id = new Guid("b3f60a68-8ab4-41a6-bb02-905625e5a024"),
                            Value = "dhabjpcuqwvqcf"
                        },
                        new
                        {
                            Id = new Guid("449f3960-6372-449f-aa3b-062b82e215fe"),
                            Value = "mzjspnpdazgyutdo"
                        },
                        new
                        {
                            Id = new Guid("9c8fbc38-be8e-4e9b-8809-6cb9437a1658"),
                            Value = "dalocwgehaxrpvvffm"
                        },
                        new
                        {
                            Id = new Guid("ff23a007-4957-4711-a10f-b02d5a32d52b"),
                            Value = "gsbuahkibxs"
                        },
                        new
                        {
                            Id = new Guid("f46d550f-d904-4dd9-ad39-582f4f7f376e"),
                            Value = "xgveuimvaevszh"
                        },
                        new
                        {
                            Id = new Guid("de7b0cf5-3c90-4cac-b3f8-2c049d059535"),
                            Value = "oknexbfuufihljvybfxz"
                        },
                        new
                        {
                            Id = new Guid("86d635cc-51d9-4cf0-9bdc-f8b3349fed57"),
                            Value = "zysajbwrwhpp"
                        },
                        new
                        {
                            Id = new Guid("09381029-ba9a-4373-8e22-480ab32b9408"),
                            Value = "uhewqtlqrdqbt"
                        },
                        new
                        {
                            Id = new Guid("9b02ad07-6e45-4b61-bcb3-4284d47e2122"),
                            Value = "raotxtekeoacmdptdep"
                        },
                        new
                        {
                            Id = new Guid("03172192-c1f7-43a1-bc30-ed0c460f0334"),
                            Value = "lvphryqpzcczhi"
                        },
                        new
                        {
                            Id = new Guid("7f28e042-5e06-4035-ac47-da5c70aa595d"),
                            Value = "aqtuyanotfaou"
                        },
                        new
                        {
                            Id = new Guid("d66a7ad3-19b4-4b23-a82d-1dbd22c03296"),
                            Value = "rlotjacumihrx"
                        },
                        new
                        {
                            Id = new Guid("b5dc3938-8179-4d28-8ce7-5731ad7836a4"),
                            Value = "ehbkryztifsd"
                        },
                        new
                        {
                            Id = new Guid("2edb50ae-a6db-4544-be18-f9ae0a2bf0c3"),
                            Value = "mkvsrwegtnpvguzxfp"
                        },
                        new
                        {
                            Id = new Guid("b0002faa-0630-446d-9330-c47e31b2f198"),
                            Value = "vpaddumencwmawfm"
                        },
                        new
                        {
                            Id = new Guid("0efa755f-655f-4b2e-9d32-be73d768411e"),
                            Value = "qgicqesvbwnvkplhlv"
                        },
                        new
                        {
                            Id = new Guid("0cb8d11c-164a-4757-b3cf-4cddf609b91a"),
                            Value = "rhywexydvlwcrymvtjo"
                        },
                        new
                        {
                            Id = new Guid("676e5b26-3191-4e6b-8a79-518b06b689ac"),
                            Value = "zcyinchaeisbqfcq"
                        },
                        new
                        {
                            Id = new Guid("7807796e-eed8-477b-bc5c-ef51c34ff11a"),
                            Value = "adhhtrxitkdshmasa"
                        },
                        new
                        {
                            Id = new Guid("2430df14-778c-4606-accd-7fa12497b5e7"),
                            Value = "xhzawkyppuefrvidq"
                        },
                        new
                        {
                            Id = new Guid("3292d12d-c90a-46bb-a0e3-84a29b10e83b"),
                            Value = "vhgwowocibcvi"
                        },
                        new
                        {
                            Id = new Guid("d2ce17bf-da9c-452f-89cc-e85bd1358905"),
                            Value = "qgcmwucyocxodecc"
                        },
                        new
                        {
                            Id = new Guid("47267742-2b96-4146-92ed-e6f71ca5aae7"),
                            Value = "krxwpvruajxlkneg"
                        },
                        new
                        {
                            Id = new Guid("6e45ef48-375e-4d32-8a0e-bef717c907ca"),
                            Value = "mbjceahrdixqba"
                        },
                        new
                        {
                            Id = new Guid("0d929ae5-51f8-45ab-a345-4f5ec709ced2"),
                            Value = "xywfwqzmvld"
                        },
                        new
                        {
                            Id = new Guid("e07afdc9-9b57-4e7e-9207-6d33685fc439"),
                            Value = "ytbfqwjdgrklk"
                        },
                        new
                        {
                            Id = new Guid("1db6eadf-8650-4b8e-a4a9-73c332f14172"),
                            Value = "fogidwmfkmjsku"
                        },
                        new
                        {
                            Id = new Guid("4adf318c-236f-45e0-a354-8abcfd80508f"),
                            Value = "aywslkahhps"
                        },
                        new
                        {
                            Id = new Guid("ab7031eb-87c3-4bf5-b0da-199a6562248a"),
                            Value = "xaaacuhgrxm"
                        },
                        new
                        {
                            Id = new Guid("509c82fe-c864-4bb0-91f7-1e36b2ade42d"),
                            Value = "ilcenzylrvxxm"
                        },
                        new
                        {
                            Id = new Guid("824a4d8b-5995-43ab-9c6b-c9220f77b319"),
                            Value = "xvixvomecwuuot"
                        },
                        new
                        {
                            Id = new Guid("e5a3402c-dd7d-43b5-96af-bc90cc405552"),
                            Value = "ujsgyfddnlyrtrpr"
                        },
                        new
                        {
                            Id = new Guid("b0fbb614-e5d9-4432-a85a-dd66b1f13a41"),
                            Value = "odwqpshqchmztyi"
                        },
                        new
                        {
                            Id = new Guid("a1dfd0e4-af35-4c92-901e-5b8f3f12dd79"),
                            Value = "yinxpvpychmtk"
                        },
                        new
                        {
                            Id = new Guid("d411288b-de45-4960-9f62-1f9055074bff"),
                            Value = "mvotmcsjnvuwo"
                        },
                        new
                        {
                            Id = new Guid("73b6b2f8-90b3-4575-986d-8845615022a8"),
                            Value = "ylepcuxfmygrqsqznu"
                        },
                        new
                        {
                            Id = new Guid("d102bb60-0193-40f9-89e1-e48357c99657"),
                            Value = "xquyjnjwlwfpakhc"
                        },
                        new
                        {
                            Id = new Guid("a76066f5-2207-49ef-a610-fc63c68e8f19"),
                            Value = "lbmvlqzixlimx"
                        },
                        new
                        {
                            Id = new Guid("4bbca238-5131-4387-a888-1d79af0ba95f"),
                            Value = "wmvpvhyeeo"
                        },
                        new
                        {
                            Id = new Guid("5a520bb1-9324-4cd3-91ac-76f4762784a9"),
                            Value = "ckqrclknrtjicy"
                        },
                        new
                        {
                            Id = new Guid("440c3446-8170-45f0-87c0-4933b88cbc2a"),
                            Value = "hionyjibobuer"
                        },
                        new
                        {
                            Id = new Guid("694f5fb0-9925-4860-8297-447b1ea76979"),
                            Value = "iodokjfxpluuzou"
                        },
                        new
                        {
                            Id = new Guid("d5564ba9-2572-4ea6-9772-b2b6186c305a"),
                            Value = "jdiblxtsqulaba"
                        },
                        new
                        {
                            Id = new Guid("1658717b-798b-4baf-bdd4-799cc8777a21"),
                            Value = "xzojuieipick"
                        },
                        new
                        {
                            Id = new Guid("2c268d69-2f27-4132-bd92-972d6da16200"),
                            Value = "cldjzllftgafxyy"
                        },
                        new
                        {
                            Id = new Guid("8fd099d6-b86b-413c-875d-d6253881d2f4"),
                            Value = "wqwsgrlzwxdovtsrvovi"
                        },
                        new
                        {
                            Id = new Guid("037aabbb-963b-4a2d-9be1-ac2945884a1a"),
                            Value = "enbviouscyhwtxbel"
                        },
                        new
                        {
                            Id = new Guid("1264ab4b-faac-4f69-9f35-3e054c2433b6"),
                            Value = "efdnixsmahghrnztmo"
                        },
                        new
                        {
                            Id = new Guid("65c6bb46-49ac-4f78-a30b-35fbf6d65f1c"),
                            Value = "xgocjlpkpbq"
                        },
                        new
                        {
                            Id = new Guid("af4b5b7b-7e67-4099-879b-af0d45072bf1"),
                            Value = "jkjohwoapts"
                        },
                        new
                        {
                            Id = new Guid("2a40bb46-931b-406a-ae33-f3c63e56d0d5"),
                            Value = "jjwngpbcnjmbcbnui"
                        },
                        new
                        {
                            Id = new Guid("c5546e6f-d4df-407f-8cf2-1c27a63fd824"),
                            Value = "rypjgenllxqmh"
                        },
                        new
                        {
                            Id = new Guid("3f1e28dc-51eb-44e7-8df4-0882f7ef7985"),
                            Value = "ecodteicxry"
                        },
                        new
                        {
                            Id = new Guid("469306b1-ea6e-4504-a512-3b22bb9ce3e7"),
                            Value = "ikjnjthxgcqqrxjq"
                        },
                        new
                        {
                            Id = new Guid("c91ca441-b9fc-466f-93f2-a0d9fef4e76a"),
                            Value = "rxdlyhyqhdj"
                        },
                        new
                        {
                            Id = new Guid("034c759b-5911-4927-abad-158afeacbba2"),
                            Value = "nxbgvckmqmmzsq"
                        },
                        new
                        {
                            Id = new Guid("684f49f1-97bd-4af7-b3a6-6c3a1d534d25"),
                            Value = "mstixhbzgzified"
                        },
                        new
                        {
                            Id = new Guid("022a718b-1ce6-4a13-9865-fbbafdd051ea"),
                            Value = "hojypxgzxxbhz"
                        },
                        new
                        {
                            Id = new Guid("fec0009f-c156-4ee9-b87a-83ec0aed64bb"),
                            Value = "ifcpodmoqusdwrqq"
                        },
                        new
                        {
                            Id = new Guid("0e1c8f1d-b365-4db1-a720-afc1b50afa91"),
                            Value = "nmsydxkehlba"
                        },
                        new
                        {
                            Id = new Guid("b5c95e22-10d2-4b84-8a05-df0dab692466"),
                            Value = "pckwgrzqhxnuge"
                        },
                        new
                        {
                            Id = new Guid("975ea7c6-d680-4578-a39b-45d059d9cbb2"),
                            Value = "hqlxvszlksjo"
                        });
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.FileInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MessageFileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MimeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("MessageFileId")
                        .IsUnique()
                        .HasFilter("[MessageFileId] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("FileInformations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            MimeType = "image/jpeg",
                            Name = "00000000-0000-0000-0000-000000000000.jpg",
                            SendDate = new DateTime(2020, 12, 12, 19, 56, 57, 246, DateTimeKind.Local).AddTicks(1218),
                            Size = 0L
                        });
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Invitation", b =>
                {
                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InvitedUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InviterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupId", "InvitedUserId", "InviterId");

                    b.HasIndex("InvitedUserId");

                    b.HasIndex("InviterId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Ip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsInBan")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ips");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.MessageFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FileInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PreviousName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("MessageFiles");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserCountry", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "CountryId");

                    b.HasIndex("CountryId");

                    b.ToTable("UserCountries");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserGroup", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCreator")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLeaved")
                        .HasColumnType("bit");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserIp", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IpId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "IpId");

                    b.HasIndex("IpId");

                    b.ToTable("UserIps");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Application", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Applications")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Connection", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Connections")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.FileInformation", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("ImageInformations")
                        .HasForeignKey("GroupId");

                    b.HasOne("SuperMessenger.Models.EntityFramework.MessageFile", "MessageFile")
                        .WithOne("FileInformation")
                        .HasForeignKey("SuperMessenger.Models.EntityFramework.FileInformation", "MessageFileId");

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("AvatarInformations")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Invitation", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Invitations")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "InvitedUser")
                        .WithMany("InvitationsForMe")
                        .HasForeignKey("InvitedUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "Inviter")
                        .WithMany("InvitationsFromMe")
                        .HasForeignKey("InviterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.Message", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("Messages")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.MessageFile", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("MessageFiles")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("MessageFiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserCountry", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Country", "Country")
                        .WithMany("UserCountries")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserCountries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserGroup", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("SuperMessenger.Models.EntityFramework.UserIp", b =>
                {
                    b.HasOne("SuperMessenger.Models.EntityFramework.Ip", "Ip")
                        .WithMany("UserIps")
                        .HasForeignKey("IpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperMessenger.Models.EntityFramework.ApplicationUser", "User")
                        .WithMany("UserIps")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
